
occlusion_detection_120.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000068  00804000  0000119a  0000122e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000119a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000004b  00804068  00804068  00001296  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001296  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000012c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00001308  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004243  00000000  00000000  000013e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000031a0  00000000  00000000  0000562b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a2a  00000000  00000000  000087cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002f0  00000000  00000000  000091f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001bee  00000000  00000000  000094e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b7c  00000000  00000000  0000b0d6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  0000bc52  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 c1 00 	jmp	0x182	; 0x182 <__ctors_end>
       4:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
       8:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
       c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      10:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      14:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      18:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      1c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      20:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      24:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      28:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      2c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      30:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      34:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      38:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      3c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      40:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      44:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      48:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      4c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      50:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      54:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      58:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      5c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      60:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      64:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      68:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      6c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      70:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      74:	0c 94 10 03 	jmp	0x620	; 0x620 <__vector_29>
      78:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      7c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      80:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      84:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      88:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      8c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      90:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      94:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      98:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      9c:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      a0:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      a4:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      a8:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      ac:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      b0:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      b4:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      b8:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      bc:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      c0:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      c4:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      c8:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      cc:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      d0:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      d4:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      d8:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      dc:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      e0:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      e4:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      e8:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      ec:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      f0:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      f4:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      f8:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
      fc:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__bad_interrupt>
     100:	07 63       	ori	r16, 0x37	; 55
     102:	42 36       	cpi	r20, 0x62	; 98
     104:	b7 9b       	sbis	0x16, 7	; 22
     106:	d8 a7       	std	Y+40, r29	; 0x28
     108:	1a 39       	cpi	r17, 0x9A	; 154
     10a:	68 56       	subi	r22, 0x68	; 104
     10c:	18 ae       	std	Y+56, r1	; 0x38
     10e:	ba ab       	std	Y+50, r27	; 0x32
     110:	55 8c       	ldd	r5, Z+29	; 0x1d
     112:	1d 3c       	cpi	r17, 0xCD	; 205
     114:	b7 cc       	rjmp	.-1682   	; 0xfffffa84 <__eeprom_end+0xff7efa84>
     116:	57 63       	ori	r21, 0x37	; 55
     118:	bd 6d       	ori	r27, 0xDD	; 221
     11a:	ed fd       	.word	0xfded	; ????
     11c:	75 3e       	cpi	r23, 0xE5	; 229
     11e:	f6 17       	cp	r31, r22
     120:	72 31       	cpi	r23, 0x12	; 18
     122:	bf 00       	.word	0x00bf	; ????
     124:	00 00       	nop
     126:	80 3f       	cpi	r24, 0xF0	; 240
     128:	08 00       	.word	0x0008	; ????
     12a:	00 00       	nop
     12c:	be 92       	st	-X, r11
     12e:	24 49       	sbci	r18, 0x94	; 148
     130:	12 3e       	cpi	r17, 0xE2	; 226
     132:	ab aa       	std	Y+51, r10	; 0x33
     134:	aa 2a       	or	r10, r26
     136:	be cd       	rjmp	.-1156   	; 0xfffffcb4 <__eeprom_end+0xff7efcb4>
     138:	cc cc       	rjmp	.-1640   	; 0xfffffad2 <__eeprom_end+0xff7efad2>
     13a:	4c 3e       	cpi	r20, 0xEC	; 236
     13c:	00 00       	nop
     13e:	00 80       	ld	r0, Z
     140:	be ab       	std	Y+54, r27	; 0x36
     142:	aa aa       	std	Y+50, r10	; 0x32
     144:	aa 3e       	cpi	r26, 0xEA	; 234
     146:	00 00       	nop
     148:	00 00       	nop
     14a:	bf 00       	.word	0x00bf	; ????
     14c:	00 00       	nop
     14e:	80 3f       	cpi	r24, 0xF0	; 240
     150:	00 00       	nop
     152:	00 00       	nop
     154:	00 08       	sbc	r0, r0
     156:	41 78       	andi	r20, 0x81	; 129
     158:	d3 bb       	out	0x13, r29	; 19
     15a:	43 87       	std	Z+11, r20	; 0x0b
     15c:	d1 13       	cpse	r29, r17
     15e:	3d 19       	sub	r19, r13
     160:	0e 3c       	cpi	r16, 0xCE	; 206
     162:	c3 bd       	out	0x23, r28	; 35
     164:	42 82       	std	Z+2, r4	; 0x02
     166:	ad 2b       	or	r26, r29
     168:	3e 68       	ori	r19, 0x8E	; 142
     16a:	ec 82       	std	Y+4, r14	; 0x04
     16c:	76 be       	out	0x36, r7	; 54
     16e:	d9 8f       	std	Y+25, r29	; 0x19
     170:	e1 a9       	ldd	r30, Z+49	; 0x31
     172:	3e 4c       	sbci	r19, 0xCE	; 206
     174:	80 ef       	ldi	r24, 0xF0	; 240
     176:	ff be       	out	0x3f, r15	; 63
     178:	01 c4       	rjmp	.+2050   	; 0x97c <__addsf3x+0x80>
     17a:	ff 7f       	andi	r31, 0xFF	; 255
     17c:	3f 00       	.word	0x003f	; ????
     17e:	00 00       	nop
	...

00000182 <__ctors_end>:
     182:	11 24       	eor	r1, r1
     184:	1f be       	out	0x3f, r1	; 63
     186:	cf ef       	ldi	r28, 0xFF	; 255
     188:	cd bf       	out	0x3d, r28	; 61
     18a:	df e7       	ldi	r29, 0x7F	; 127
     18c:	de bf       	out	0x3e, r29	; 62

0000018e <__do_copy_data>:
     18e:	10 e4       	ldi	r17, 0x40	; 64
     190:	a0 e0       	ldi	r26, 0x00	; 0
     192:	b0 e4       	ldi	r27, 0x40	; 64
     194:	ea e9       	ldi	r30, 0x9A	; 154
     196:	f1 e1       	ldi	r31, 0x11	; 17
     198:	00 e0       	ldi	r16, 0x00	; 0
     19a:	0b bf       	out	0x3b, r16	; 59
     19c:	02 c0       	rjmp	.+4      	; 0x1a2 <__do_copy_data+0x14>
     19e:	07 90       	elpm	r0, Z+
     1a0:	0d 92       	st	X+, r0
     1a2:	a8 36       	cpi	r26, 0x68	; 104
     1a4:	b1 07       	cpc	r27, r17
     1a6:	d9 f7       	brne	.-10     	; 0x19e <__do_copy_data+0x10>

000001a8 <__do_clear_bss>:
     1a8:	20 e4       	ldi	r18, 0x40	; 64
     1aa:	a8 e6       	ldi	r26, 0x68	; 104
     1ac:	b0 e4       	ldi	r27, 0x40	; 64
     1ae:	01 c0       	rjmp	.+2      	; 0x1b2 <.do_clear_bss_start>

000001b0 <.do_clear_bss_loop>:
     1b0:	1d 92       	st	X+, r1

000001b2 <.do_clear_bss_start>:
     1b2:	a3 3b       	cpi	r26, 0xB3	; 179
     1b4:	b2 07       	cpc	r27, r18
     1b6:	e1 f7       	brne	.-8      	; 0x1b0 <.do_clear_bss_loop>
     1b8:	0e 94 4a 04 	call	0x894	; 0x894 <main>
     1bc:	0c 94 cb 08 	jmp	0x1196	; 0x1196 <_exit>

000001c0 <__bad_interrupt>:
     1c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c4 <reverse>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1c4:	61 50       	subi	r22, 0x01	; 1
     1c6:	71 09       	sbc	r23, r1
     1c8:	20 e0       	ldi	r18, 0x00	; 0
     1ca:	30 e0       	ldi	r19, 0x00	; 0
     1cc:	0e c0       	rjmp	.+28     	; 0x1ea <reverse+0x26>
     1ce:	dc 01       	movw	r26, r24
     1d0:	a2 0f       	add	r26, r18
     1d2:	b3 1f       	adc	r27, r19
     1d4:	4c 91       	ld	r20, X
     1d6:	fc 01       	movw	r30, r24
     1d8:	e6 0f       	add	r30, r22
     1da:	f7 1f       	adc	r31, r23
     1dc:	50 81       	ld	r21, Z
     1de:	5c 93       	st	X, r21
     1e0:	40 83       	st	Z, r20
     1e2:	2f 5f       	subi	r18, 0xFF	; 255
     1e4:	3f 4f       	sbci	r19, 0xFF	; 255
     1e6:	61 50       	subi	r22, 0x01	; 1
     1e8:	71 09       	sbc	r23, r1
     1ea:	26 17       	cp	r18, r22
     1ec:	37 07       	cpc	r19, r23
     1ee:	7c f3       	brlt	.-34     	; 0x1ce <reverse+0xa>
     1f0:	08 95       	ret

000001f2 <intToStr>:
     1f2:	cf 92       	push	r12
     1f4:	df 92       	push	r13
     1f6:	ef 92       	push	r14
     1f8:	ff 92       	push	r15
     1fa:	0f 93       	push	r16
     1fc:	1f 93       	push	r17
     1fe:	cf 93       	push	r28
     200:	df 93       	push	r29
     202:	8a 01       	movw	r16, r20
     204:	69 01       	movw	r12, r18
     206:	c0 e0       	ldi	r28, 0x00	; 0
     208:	d0 e0       	ldi	r29, 0x00	; 0
     20a:	11 c0       	rjmp	.+34     	; 0x22e <__EEPROM_REGION_LENGTH__+0x2e>
     20c:	78 01       	movw	r14, r16
     20e:	ec 0e       	add	r14, r28
     210:	fd 1e       	adc	r15, r29
     212:	2a e0       	ldi	r18, 0x0A	; 10
     214:	30 e0       	ldi	r19, 0x00	; 0
     216:	40 e0       	ldi	r20, 0x00	; 0
     218:	50 e0       	ldi	r21, 0x00	; 0
     21a:	0e 94 29 08 	call	0x1052	; 0x1052 <__divmodsi4>
     21e:	60 5d       	subi	r22, 0xD0	; 208
     220:	f7 01       	movw	r30, r14
     222:	60 83       	st	Z, r22
     224:	62 2f       	mov	r22, r18
     226:	73 2f       	mov	r23, r19
     228:	84 2f       	mov	r24, r20
     22a:	95 2f       	mov	r25, r21
     22c:	21 96       	adiw	r28, 0x01	; 1
     22e:	61 15       	cp	r22, r1
     230:	71 05       	cpc	r23, r1
     232:	81 05       	cpc	r24, r1
     234:	91 05       	cpc	r25, r1
     236:	51 f7       	brne	.-44     	; 0x20c <__EEPROM_REGION_LENGTH__+0xc>
     238:	06 c0       	rjmp	.+12     	; 0x246 <__EEPROM_REGION_LENGTH__+0x46>
     23a:	f8 01       	movw	r30, r16
     23c:	ec 0f       	add	r30, r28
     23e:	fd 1f       	adc	r31, r29
     240:	80 e3       	ldi	r24, 0x30	; 48
     242:	80 83       	st	Z, r24
     244:	21 96       	adiw	r28, 0x01	; 1
     246:	cc 15       	cp	r28, r12
     248:	dd 05       	cpc	r29, r13
     24a:	bc f3       	brlt	.-18     	; 0x23a <__EEPROM_REGION_LENGTH__+0x3a>
     24c:	be 01       	movw	r22, r28
     24e:	c8 01       	movw	r24, r16
     250:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <reverse>
     254:	f8 01       	movw	r30, r16
     256:	ec 0f       	add	r30, r28
     258:	fd 1f       	adc	r31, r29
     25a:	10 82       	st	Z, r1
     25c:	ce 01       	movw	r24, r28
     25e:	df 91       	pop	r29
     260:	cf 91       	pop	r28
     262:	1f 91       	pop	r17
     264:	0f 91       	pop	r16
     266:	ff 90       	pop	r15
     268:	ef 90       	pop	r14
     26a:	df 90       	pop	r13
     26c:	cf 90       	pop	r12
     26e:	08 95       	ret

00000270 <ftoa>:
     270:	8f 92       	push	r8
     272:	9f 92       	push	r9
     274:	af 92       	push	r10
     276:	bf 92       	push	r11
     278:	cf 92       	push	r12
     27a:	df 92       	push	r13
     27c:	ef 92       	push	r14
     27e:	ff 92       	push	r15
     280:	0f 93       	push	r16
     282:	1f 93       	push	r17
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	4b 01       	movw	r8, r22
     28a:	5c 01       	movw	r10, r24
     28c:	8a 01       	movw	r16, r20
     28e:	e9 01       	movw	r28, r18
     290:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fixsfsi>
     294:	6b 01       	movw	r12, r22
     296:	77 0f       	add	r23, r23
     298:	ee 08       	sbc	r14, r14
     29a:	ff 08       	sbc	r15, r15
     29c:	c7 01       	movw	r24, r14
     29e:	b6 01       	movw	r22, r12
     2a0:	0e 94 82 05 	call	0xb04	; 0xb04 <__floatsisf>
     2a4:	9b 01       	movw	r18, r22
     2a6:	ac 01       	movw	r20, r24
     2a8:	c5 01       	movw	r24, r10
     2aa:	b4 01       	movw	r22, r8
     2ac:	0e 94 66 04 	call	0x8cc	; 0x8cc <__subsf3>
     2b0:	4b 01       	movw	r8, r22
     2b2:	5c 01       	movw	r10, r24
     2b4:	20 e0       	ldi	r18, 0x00	; 0
     2b6:	30 e0       	ldi	r19, 0x00	; 0
     2b8:	a8 01       	movw	r20, r16
     2ba:	c7 01       	movw	r24, r14
     2bc:	b6 01       	movw	r22, r12
     2be:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <intToStr>
     2c2:	7c 01       	movw	r14, r24
     2c4:	20 97       	sbiw	r28, 0x00	; 0
     2c6:	49 f1       	breq	.+82     	; 0x31a <ftoa+0xaa>
     2c8:	f8 01       	movw	r30, r16
     2ca:	e8 0f       	add	r30, r24
     2cc:	f9 1f       	adc	r31, r25
     2ce:	8e e2       	ldi	r24, 0x2E	; 46
     2d0:	80 83       	st	Z, r24
     2d2:	be 01       	movw	r22, r28
     2d4:	0d 2e       	mov	r0, r29
     2d6:	00 0c       	add	r0, r0
     2d8:	88 0b       	sbc	r24, r24
     2da:	99 0b       	sbc	r25, r25
     2dc:	0e 94 82 05 	call	0xb04	; 0xb04 <__floatsisf>
     2e0:	9b 01       	movw	r18, r22
     2e2:	ac 01       	movw	r20, r24
     2e4:	60 e0       	ldi	r22, 0x00	; 0
     2e6:	70 e0       	ldi	r23, 0x00	; 0
     2e8:	80 e2       	ldi	r24, 0x20	; 32
     2ea:	91 e4       	ldi	r25, 0x41	; 65
     2ec:	0e 94 a4 06 	call	0xd48	; 0xd48 <pow>
     2f0:	9b 01       	movw	r18, r22
     2f2:	ac 01       	movw	r20, r24
     2f4:	c5 01       	movw	r24, r10
     2f6:	b4 01       	movw	r22, r8
     2f8:	0e 94 37 06 	call	0xc6e	; 0xc6e <__mulsf3>
     2fc:	2f ef       	ldi	r18, 0xFF	; 255
     2fe:	e2 1a       	sub	r14, r18
     300:	f2 0a       	sbc	r15, r18
     302:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fixsfsi>
     306:	a8 01       	movw	r20, r16
     308:	4e 0d       	add	r20, r14
     30a:	5f 1d       	adc	r21, r15
     30c:	07 2e       	mov	r0, r23
     30e:	00 0c       	add	r0, r0
     310:	88 0b       	sbc	r24, r24
     312:	99 0b       	sbc	r25, r25
     314:	9e 01       	movw	r18, r28
     316:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <intToStr>
     31a:	df 91       	pop	r29
     31c:	cf 91       	pop	r28
     31e:	1f 91       	pop	r17
     320:	0f 91       	pop	r16
     322:	ff 90       	pop	r15
     324:	ef 90       	pop	r14
     326:	df 90       	pop	r13
     328:	cf 90       	pop	r12
     32a:	bf 90       	pop	r11
     32c:	af 90       	pop	r10
     32e:	9f 90       	pop	r9
     330:	8f 90       	pop	r8
     332:	08 95       	ret

00000334 <USART1_init>:
     334:	e0 e4       	ldi	r30, 0x40	; 64
     336:	f4 e0       	ldi	r31, 0x04	; 4
     338:	20 81       	ld	r18, Z
     33a:	2d 7f       	andi	r18, 0xFD	; 253
     33c:	20 83       	st	Z, r18
     33e:	20 81       	ld	r18, Z
     340:	21 60       	ori	r18, 0x01	; 1
     342:	20 83       	st	Z, r18
     344:	bc 01       	movw	r22, r24
     346:	80 e0       	ldi	r24, 0x00	; 0
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	0e 94 80 05 	call	0xb00	; 0xb00 <__floatunsisf>
     34e:	20 e0       	ldi	r18, 0x00	; 0
     350:	30 e0       	ldi	r19, 0x00	; 0
     352:	40 e8       	ldi	r20, 0x80	; 128
     354:	51 e4       	ldi	r21, 0x41	; 65
     356:	0e 94 37 06 	call	0xc6e	; 0xc6e <__mulsf3>
     35a:	9b 01       	movw	r18, r22
     35c:	ac 01       	movw	r20, r24
     35e:	60 e0       	ldi	r22, 0x00	; 0
     360:	74 e2       	ldi	r23, 0x24	; 36
     362:	84 e7       	ldi	r24, 0x74	; 116
     364:	9d e4       	ldi	r25, 0x4D	; 77
     366:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__divsf3>
     36a:	20 e0       	ldi	r18, 0x00	; 0
     36c:	30 e0       	ldi	r19, 0x00	; 0
     36e:	40 e0       	ldi	r20, 0x00	; 0
     370:	5f e3       	ldi	r21, 0x3F	; 63
     372:	0e 94 67 04 	call	0x8ce	; 0x8ce <__addsf3>
     376:	0e 94 51 05 	call	0xaa2	; 0xaa2 <__fixunssfsi>
     37a:	e0 e2       	ldi	r30, 0x20	; 32
     37c:	f8 e0       	ldi	r31, 0x08	; 8
     37e:	60 87       	std	Z+8, r22	; 0x08
     380:	71 87       	std	Z+9, r23	; 0x09
     382:	86 81       	ldd	r24, Z+6	; 0x06
     384:	80 6c       	ori	r24, 0xC0	; 192
     386:	86 83       	std	Z+6, r24	; 0x06
     388:	08 95       	ret

0000038a <USART1_sendChar>:
     38a:	90 91 24 08 	lds	r25, 0x0824	; 0x800824 <__TEXT_REGION_LENGTH__+0x7e0824>
     38e:	95 ff       	sbrs	r25, 5
     390:	fc cf       	rjmp	.-8      	; 0x38a <USART1_sendChar>
     392:	80 93 22 08 	sts	0x0822, r24	; 0x800822 <__TEXT_REGION_LENGTH__+0x7e0822>
     396:	08 95       	ret

00000398 <USART1_sendString>:
     398:	0f 93       	push	r16
     39a:	1f 93       	push	r17
     39c:	cf 93       	push	r28
     39e:	df 93       	push	r29
     3a0:	8c 01       	movw	r16, r24
     3a2:	c0 e0       	ldi	r28, 0x00	; 0
     3a4:	d0 e0       	ldi	r29, 0x00	; 0
     3a6:	07 c0       	rjmp	.+14     	; 0x3b6 <USART1_sendString+0x1e>
     3a8:	f8 01       	movw	r30, r16
     3aa:	ec 0f       	add	r30, r28
     3ac:	fd 1f       	adc	r31, r29
     3ae:	80 81       	ld	r24, Z
     3b0:	0e 94 c5 01 	call	0x38a	; 0x38a <USART1_sendChar>
     3b4:	21 96       	adiw	r28, 0x01	; 1
     3b6:	f8 01       	movw	r30, r16
     3b8:	01 90       	ld	r0, Z+
     3ba:	00 20       	and	r0, r0
     3bc:	e9 f7       	brne	.-6      	; 0x3b8 <USART1_sendString+0x20>
     3be:	31 97       	sbiw	r30, 0x01	; 1
     3c0:	e0 1b       	sub	r30, r16
     3c2:	f1 0b       	sbc	r31, r17
     3c4:	ce 17       	cp	r28, r30
     3c6:	df 07       	cpc	r29, r31
     3c8:	78 f3       	brcs	.-34     	; 0x3a8 <USART1_sendString+0x10>
     3ca:	8a e0       	ldi	r24, 0x0A	; 10
     3cc:	0e 94 c5 01 	call	0x38a	; 0x38a <USART1_sendChar>
     3d0:	df 91       	pop	r29
     3d2:	cf 91       	pop	r28
     3d4:	1f 91       	pop	r17
     3d6:	0f 91       	pop	r16
     3d8:	08 95       	ret

000003da <USART1_sendInt>:
     3da:	20 e0       	ldi	r18, 0x00	; 0
     3dc:	30 e0       	ldi	r19, 0x00	; 0
     3de:	4f e7       	ldi	r20, 0x7F	; 127
     3e0:	50 e4       	ldi	r21, 0x40	; 64
     3e2:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <intToStr>
     3e6:	8f e7       	ldi	r24, 0x7F	; 127
     3e8:	90 e4       	ldi	r25, 0x40	; 64
     3ea:	0e 94 cc 01 	call	0x398	; 0x398 <USART1_sendString>
     3ee:	08 95       	ret

000003f0 <USART1_sendFloat>:
     3f0:	9a 01       	movw	r18, r20
     3f2:	4f e7       	ldi	r20, 0x7F	; 127
     3f4:	50 e4       	ldi	r21, 0x40	; 64
     3f6:	0e 94 38 01 	call	0x270	; 0x270 <ftoa>
     3fa:	8f e7       	ldi	r24, 0x7F	; 127
     3fc:	90 e4       	ldi	r25, 0x40	; 64
     3fe:	0e 94 cc 01 	call	0x398	; 0x398 <USART1_sendString>
     402:	08 95       	ret

00000404 <ADC0_init>:
     404:	85 e8       	ldi	r24, 0x85	; 133
     406:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__TEXT_REGION_LENGTH__+0x7e00a0>
     40a:	e0 e0       	ldi	r30, 0x00	; 0
     40c:	f6 e0       	ldi	r31, 0x06	; 6
     40e:	81 e0       	ldi	r24, 0x01	; 1
     410:	82 83       	std	Z+2, r24	; 0x02
     412:	80 83       	st	Z, r24
     414:	08 95       	ret

00000416 <ADC0_start>:
     416:	81 e0       	ldi	r24, 0x01	; 1
     418:	80 93 0a 06 	sts	0x060A, r24	; 0x80060a <__TEXT_REGION_LENGTH__+0x7e060a>
     41c:	08 95       	ret

0000041e <ADC0_read>:
     41e:	80 93 08 06 	sts	0x0608, r24	; 0x800608 <__TEXT_REGION_LENGTH__+0x7e0608>
     422:	0e 94 0b 02 	call	0x416	; 0x416 <ADC0_start>
     426:	80 91 0d 06 	lds	r24, 0x060D	; 0x80060d <__TEXT_REGION_LENGTH__+0x7e060d>
     42a:	80 ff       	sbrs	r24, 0
     42c:	fc cf       	rjmp	.-8      	; 0x426 <ADC0_read+0x8>
     42e:	80 91 10 06 	lds	r24, 0x0610	; 0x800610 <__TEXT_REGION_LENGTH__+0x7e0610>
     432:	90 91 11 06 	lds	r25, 0x0611	; 0x800611 <__TEXT_REGION_LENGTH__+0x7e0611>
     436:	08 95       	ret

00000438 <ReadCount>:
     438:	e0 e0       	ldi	r30, 0x00	; 0
     43a:	f4 e0       	ldi	r31, 0x04	; 4
     43c:	84 81       	ldd	r24, Z+4	; 0x04
     43e:	87 7f       	andi	r24, 0xF7	; 247
     440:	84 83       	std	Z+4, r24	; 0x04
     442:	80 91 08 04 	lds	r24, 0x0408	; 0x800408 <__TEXT_REGION_LENGTH__+0x7e0408>
     446:	82 fd       	sbrc	r24, 2
     448:	fc cf       	rjmp	.-8      	; 0x442 <ReadCount+0xa>
     44a:	90 e0       	ldi	r25, 0x00	; 0
     44c:	40 e0       	ldi	r20, 0x00	; 0
     44e:	50 e0       	ldi	r21, 0x00	; 0
     450:	ba 01       	movw	r22, r20
     452:	1c c0       	rjmp	.+56     	; 0x48c <ReadCount+0x54>
     454:	e0 e0       	ldi	r30, 0x00	; 0
     456:	f4 e0       	ldi	r31, 0x04	; 4
     458:	84 81       	ldd	r24, Z+4	; 0x04
     45a:	88 60       	ori	r24, 0x08	; 8
     45c:	84 83       	std	Z+4, r24	; 0x04
     45e:	26 e0       	ldi	r18, 0x06	; 6
     460:	2a 95       	dec	r18
     462:	f1 f7       	brne	.-4      	; 0x460 <ReadCount+0x28>
     464:	00 c0       	rjmp	.+0      	; 0x466 <ReadCount+0x2e>
     466:	44 0f       	add	r20, r20
     468:	55 1f       	adc	r21, r21
     46a:	66 1f       	adc	r22, r22
     46c:	77 1f       	adc	r23, r23
     46e:	84 81       	ldd	r24, Z+4	; 0x04
     470:	87 7f       	andi	r24, 0xF7	; 247
     472:	84 83       	std	Z+4, r24	; 0x04
     474:	86 e0       	ldi	r24, 0x06	; 6
     476:	8a 95       	dec	r24
     478:	f1 f7       	brne	.-4      	; 0x476 <ReadCount+0x3e>
     47a:	00 c0       	rjmp	.+0      	; 0x47c <ReadCount+0x44>
     47c:	80 85       	ldd	r24, Z+8	; 0x08
     47e:	82 ff       	sbrs	r24, 2
     480:	04 c0       	rjmp	.+8      	; 0x48a <ReadCount+0x52>
     482:	4f 5f       	subi	r20, 0xFF	; 255
     484:	5f 4f       	sbci	r21, 0xFF	; 255
     486:	6f 4f       	sbci	r22, 0xFF	; 255
     488:	7f 4f       	sbci	r23, 0xFF	; 255
     48a:	9f 5f       	subi	r25, 0xFF	; 255
     48c:	98 31       	cpi	r25, 0x18	; 24
     48e:	10 f3       	brcs	.-60     	; 0x454 <ReadCount+0x1c>
     490:	e0 e0       	ldi	r30, 0x00	; 0
     492:	f4 e0       	ldi	r31, 0x04	; 4
     494:	84 81       	ldd	r24, Z+4	; 0x04
     496:	88 60       	ori	r24, 0x08	; 8
     498:	84 83       	std	Z+4, r24	; 0x04
     49a:	cb 01       	movw	r24, r22
     49c:	ba 01       	movw	r22, r20
     49e:	80 58       	subi	r24, 0x80	; 128
     4a0:	24 81       	ldd	r18, Z+4	; 0x04
     4a2:	27 7f       	andi	r18, 0xF7	; 247
     4a4:	24 83       	std	Z+4, r18	; 0x04
     4a6:	08 95       	ret

000004a8 <syringeforward>:
     4a8:	e0 e0       	ldi	r30, 0x00	; 0
     4aa:	f4 e0       	ldi	r31, 0x04	; 4
     4ac:	86 81       	ldd	r24, Z+6	; 0x06
     4ae:	80 64       	ori	r24, 0x40	; 64
     4b0:	86 83       	std	Z+6, r24	; 0x06
     4b2:	85 81       	ldd	r24, Z+5	; 0x05
     4b4:	80 61       	ori	r24, 0x10	; 16
     4b6:	85 83       	std	Z+5, r24	; 0x05
     4b8:	8f e1       	ldi	r24, 0x1F	; 31
     4ba:	9e e4       	ldi	r25, 0x4E	; 78
     4bc:	01 97       	sbiw	r24, 0x01	; 1
     4be:	f1 f7       	brne	.-4      	; 0x4bc <syringeforward+0x14>
     4c0:	00 c0       	rjmp	.+0      	; 0x4c2 <syringeforward+0x1a>
     4c2:	00 00       	nop
     4c4:	86 81       	ldd	r24, Z+6	; 0x06
     4c6:	80 61       	ori	r24, 0x10	; 16
     4c8:	86 83       	std	Z+6, r24	; 0x06
     4ca:	8f e1       	ldi	r24, 0x1F	; 31
     4cc:	9e e4       	ldi	r25, 0x4E	; 78
     4ce:	01 97       	sbiw	r24, 0x01	; 1
     4d0:	f1 f7       	brne	.-4      	; 0x4ce <syringeforward+0x26>
     4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <syringeforward+0x2c>
     4d4:	00 00       	nop
     4d6:	08 95       	ret

000004d8 <ok_syringe>:
 }

 /*****************************syringe****************************************************************/

 void ok_syringe(void) //which syringe is detected 60ml,20ml
 {
     4d8:	cf 92       	push	r12
     4da:	df 92       	push	r13
     4dc:	ef 92       	push	r14
     4de:	ff 92       	push	r15
     4e0:	cf 93       	push	r28
     4e2:	df 93       	push	r29
	 for(int i=1; i<=10; i++)
     4e4:	c1 e0       	ldi	r28, 0x01	; 1
     4e6:	d0 e0       	ldi	r29, 0x00	; 0
     4e8:	20 c0       	rjmp	.+64     	; 0x52a <ok_syringe+0x52>
	 {
		 adc = ADC0_read(channel_3);
     4ea:	83 e0       	ldi	r24, 0x03	; 3
     4ec:	0e 94 0f 02 	call	0x41e	; 0x41e <ADC0_read>
     4f0:	80 93 b1 40 	sts	0x40B1, r24	; 0x8040b1 <adc>
     4f4:	90 93 b2 40 	sts	0x40B2, r25	; 0x8040b2 <adc+0x1>
		 sum=sum+adc;
     4f8:	bc 01       	movw	r22, r24
     4fa:	99 0f       	add	r25, r25
     4fc:	88 0b       	sbc	r24, r24
     4fe:	99 0b       	sbc	r25, r25
     500:	0e 94 82 05 	call	0xb04	; 0xb04 <__floatsisf>
     504:	20 91 7b 40 	lds	r18, 0x407B	; 0x80407b <sum>
     508:	30 91 7c 40 	lds	r19, 0x407C	; 0x80407c <sum+0x1>
     50c:	40 91 7d 40 	lds	r20, 0x407D	; 0x80407d <sum+0x2>
     510:	50 91 7e 40 	lds	r21, 0x407E	; 0x80407e <sum+0x3>
     514:	0e 94 67 04 	call	0x8ce	; 0x8ce <__addsf3>
     518:	60 93 7b 40 	sts	0x407B, r22	; 0x80407b <sum>
     51c:	70 93 7c 40 	sts	0x407C, r23	; 0x80407c <sum+0x1>
     520:	80 93 7d 40 	sts	0x407D, r24	; 0x80407d <sum+0x2>
     524:	90 93 7e 40 	sts	0x407E, r25	; 0x80407e <sum+0x3>

 /*****************************syringe****************************************************************/

 void ok_syringe(void) //which syringe is detected 60ml,20ml
 {
	 for(int i=1; i<=10; i++)
     528:	21 96       	adiw	r28, 0x01	; 1
     52a:	cb 30       	cpi	r28, 0x0B	; 11
     52c:	d1 05       	cpc	r29, r1
     52e:	ec f2       	brlt	.-70     	; 0x4ea <ok_syringe+0x12>
	 {
		 adc = ADC0_read(channel_3);
		 sum=sum+adc;
	 }
	 sum = sum/10.00;
     530:	60 91 7b 40 	lds	r22, 0x407B	; 0x80407b <sum>
     534:	70 91 7c 40 	lds	r23, 0x407C	; 0x80407c <sum+0x1>
     538:	80 91 7d 40 	lds	r24, 0x407D	; 0x80407d <sum+0x2>
     53c:	90 91 7e 40 	lds	r25, 0x407E	; 0x80407e <sum+0x3>
     540:	20 e0       	ldi	r18, 0x00	; 0
     542:	30 e0       	ldi	r19, 0x00	; 0
     544:	40 e2       	ldi	r20, 0x20	; 32
     546:	51 e4       	ldi	r21, 0x41	; 65
     548:	0e 94 d8 04 	call	0x9b0	; 0x9b0 <__divsf3>
     54c:	60 93 7b 40 	sts	0x407B, r22	; 0x80407b <sum>
     550:	70 93 7c 40 	sts	0x407C, r23	; 0x80407c <sum+0x1>
     554:	80 93 7d 40 	sts	0x407D, r24	; 0x80407d <sum+0x2>
     558:	90 93 7e 40 	sts	0x407E, r25	; 0x80407e <sum+0x3>
	 syringe_dia = 0.00848527*(sum)+7.717863;
     55c:	2d ec       	ldi	r18, 0xCD	; 205
     55e:	35 e0       	ldi	r19, 0x05	; 5
     560:	4b e0       	ldi	r20, 0x0B	; 11
     562:	5c e3       	ldi	r21, 0x3C	; 60
     564:	0e 94 37 06 	call	0xc6e	; 0xc6e <__mulsf3>
     568:	2c eb       	ldi	r18, 0xBC	; 188
     56a:	38 ef       	ldi	r19, 0xF8	; 248
     56c:	46 ef       	ldi	r20, 0xF6	; 246
     56e:	50 e4       	ldi	r21, 0x40	; 64
     570:	0e 94 67 04 	call	0x8ce	; 0x8ce <__addsf3>
     574:	60 93 73 40 	sts	0x4073, r22	; 0x804073 <syringe_dia>
     578:	70 93 74 40 	sts	0x4074, r23	; 0x804074 <syringe_dia+0x1>
     57c:	80 93 75 40 	sts	0x4075, r24	; 0x804075 <syringe_dia+0x2>
     580:	90 93 76 40 	sts	0x4076, r25	; 0x804076 <syringe_dia+0x3>
	 USART1_sendFloat(syringe_dia, 2);
     584:	42 e0       	ldi	r20, 0x02	; 2
     586:	50 e0       	ldi	r21, 0x00	; 0
     588:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <USART1_sendFloat>
	 
	 if (syringe_dia > 29.0)
     58c:	c0 90 73 40 	lds	r12, 0x4073	; 0x804073 <syringe_dia>
     590:	d0 90 74 40 	lds	r13, 0x4074	; 0x804074 <syringe_dia+0x1>
     594:	e0 90 75 40 	lds	r14, 0x4075	; 0x804075 <syringe_dia+0x2>
     598:	f0 90 76 40 	lds	r15, 0x4076	; 0x804076 <syringe_dia+0x3>
     59c:	20 e0       	ldi	r18, 0x00	; 0
     59e:	30 e0       	ldi	r19, 0x00	; 0
     5a0:	48 ee       	ldi	r20, 0xE8	; 232
     5a2:	51 e4       	ldi	r21, 0x41	; 65
     5a4:	c7 01       	movw	r24, r14
     5a6:	b6 01       	movw	r22, r12
     5a8:	0e 94 32 06 	call	0xc64	; 0xc64 <__gesf2>
     5ac:	18 16       	cp	r1, r24
     5ae:	2c f4       	brge	.+10     	; 0x5ba <ok_syringe+0xe2>
	 {
		 USART1_sendString("60 ML detected\n");
     5b0:	80 e0       	ldi	r24, 0x00	; 0
     5b2:	90 e4       	ldi	r25, 0x40	; 64
     5b4:	0e 94 cc 01 	call	0x398	; 0x398 <USART1_sendString>
     5b8:	2c c0       	rjmp	.+88     	; 0x612 <ok_syringe+0x13a>
	 }
	 else if (syringe_dia < 23.0 )
     5ba:	20 e0       	ldi	r18, 0x00	; 0
     5bc:	30 e0       	ldi	r19, 0x00	; 0
     5be:	48 eb       	ldi	r20, 0xB8	; 184
     5c0:	51 e4       	ldi	r21, 0x41	; 65
     5c2:	c7 01       	movw	r24, r14
     5c4:	b6 01       	movw	r22, r12
     5c6:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <__cmpsf2>
     5ca:	88 23       	and	r24, r24
     5cc:	2c f4       	brge	.+10     	; 0x5d8 <ok_syringe+0x100>
	 {
		 USART1_sendString("20 ML detected\n");
     5ce:	80 e1       	ldi	r24, 0x10	; 16
     5d0:	90 e4       	ldi	r25, 0x40	; 64
     5d2:	0e 94 cc 01 	call	0x398	; 0x398 <USART1_sendString>
     5d6:	1d c0       	rjmp	.+58     	; 0x612 <ok_syringe+0x13a>
	 }
	 else if (syringe_dia < 17.0)
     5d8:	20 e0       	ldi	r18, 0x00	; 0
     5da:	30 e0       	ldi	r19, 0x00	; 0
     5dc:	48 e8       	ldi	r20, 0x88	; 136
     5de:	51 e4       	ldi	r21, 0x41	; 65
     5e0:	c7 01       	movw	r24, r14
     5e2:	b6 01       	movw	r22, r12
     5e4:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <__cmpsf2>
     5e8:	88 23       	and	r24, r24
     5ea:	2c f4       	brge	.+10     	; 0x5f6 <ok_syringe+0x11e>
	 {
		 USART1_sendString("10 Ml detected\n");
     5ec:	80 e2       	ldi	r24, 0x20	; 32
     5ee:	90 e4       	ldi	r25, 0x40	; 64
     5f0:	0e 94 cc 01 	call	0x398	; 0x398 <USART1_sendString>
     5f4:	0e c0       	rjmp	.+28     	; 0x612 <ok_syringe+0x13a>
	 }
	 else if( syringe_dia < 12.6)
     5f6:	2a e9       	ldi	r18, 0x9A	; 154
     5f8:	39 e9       	ldi	r19, 0x99	; 153
     5fa:	49 e4       	ldi	r20, 0x49	; 73
     5fc:	51 e4       	ldi	r21, 0x41	; 65
     5fe:	c7 01       	movw	r24, r14
     600:	b6 01       	movw	r22, r12
     602:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <__cmpsf2>
     606:	88 23       	and	r24, r24
     608:	24 f4       	brge	.+8      	; 0x612 <ok_syringe+0x13a>
	 {
		 USART1_sendString("5 Ml detected\n");
     60a:	80 e3       	ldi	r24, 0x30	; 48
     60c:	90 e4       	ldi	r25, 0x40	; 64
     60e:	0e 94 cc 01 	call	0x398	; 0x398 <USART1_sendString>
	 }
 }
     612:	df 91       	pop	r29
     614:	cf 91       	pop	r28
     616:	ff 90       	pop	r15
     618:	ef 90       	pop	r14
     61a:	df 90       	pop	r13
     61c:	cf 90       	pop	r12
     61e:	08 95       	ret

00000620 <__vector_29>:

 /*********************************************************************************************/

 ISR(PORTC_PORT_vect)
 {
     620:	1f 92       	push	r1
     622:	0f 92       	push	r0
     624:	0f b6       	in	r0, 0x3f	; 63
     626:	0f 92       	push	r0
     628:	11 24       	eor	r1, r1
     62a:	0b b6       	in	r0, 0x3b	; 59
     62c:	0f 92       	push	r0
     62e:	2f 93       	push	r18
     630:	3f 93       	push	r19
     632:	4f 93       	push	r20
     634:	5f 93       	push	r21
     636:	6f 93       	push	r22
     638:	7f 93       	push	r23
     63a:	8f 93       	push	r24
     63c:	9f 93       	push	r25
     63e:	af 93       	push	r26
     640:	bf 93       	push	r27
     642:	ef 93       	push	r30
     644:	ff 93       	push	r31
	 if(PORTC.INTFLAGS & (1 << 7))
     646:	80 91 49 04 	lds	r24, 0x0449	; 0x800449 <__TEXT_REGION_LENGTH__+0x7e0449>
     64a:	88 23       	and	r24, r24
     64c:	ac f4       	brge	.+42     	; 0x678 <__vector_29+0x58>
	 {
		 if (syringe_detected)
     64e:	80 91 68 40 	lds	r24, 0x4068	; 0x804068 <__data_end>
     652:	88 23       	and	r24, r24
     654:	39 f0       	breq	.+14     	; 0x664 <__vector_29+0x44>
		 {
			 syringe_detected = false;
     656:	10 92 68 40 	sts	0x4068, r1	; 0x804068 <__data_end>
			 USART1_sendString("Waiting for Syringe\n");
     65a:	8f e3       	ldi	r24, 0x3F	; 63
     65c:	90 e4       	ldi	r25, 0x40	; 64
     65e:	0e 94 cc 01 	call	0x398	; 0x398 <USART1_sendString>
     662:	05 c0       	rjmp	.+10     	; 0x66e <__vector_29+0x4e>
		 }
		 else
		 {
			 syringe_detected = true;        //flag for Syringe button
     664:	81 e0       	ldi	r24, 0x01	; 1
     666:	80 93 68 40 	sts	0x4068, r24	; 0x804068 <__data_end>
			 ok_syringe();
     66a:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <ok_syringe>
		 }
		 PORTC.INTFLAGS |= (1<<7);
     66e:	e0 e4       	ldi	r30, 0x40	; 64
     670:	f4 e0       	ldi	r31, 0x04	; 4
     672:	81 85       	ldd	r24, Z+9	; 0x09
     674:	80 68       	ori	r24, 0x80	; 128
     676:	81 87       	std	Z+9, r24	; 0x09
		 
	 }
 }
     678:	ff 91       	pop	r31
     67a:	ef 91       	pop	r30
     67c:	bf 91       	pop	r27
     67e:	af 91       	pop	r26
     680:	9f 91       	pop	r25
     682:	8f 91       	pop	r24
     684:	7f 91       	pop	r23
     686:	6f 91       	pop	r22
     688:	5f 91       	pop	r21
     68a:	4f 91       	pop	r20
     68c:	3f 91       	pop	r19
     68e:	2f 91       	pop	r18
     690:	0f 90       	pop	r0
     692:	0b be       	out	0x3b, r0	; 59
     694:	0f 90       	pop	r0
     696:	0f be       	out	0x3f, r0	; 63
     698:	0f 90       	pop	r0
     69a:	1f 90       	pop	r1
     69c:	18 95       	reti

0000069e <syringe_check_init>:

 /****************************syringe check init*******************************************************/

 void syringe_check_init(void)
 {
	 if(!(PORTC.IN & PIN7_bm))
     69e:	80 91 48 04 	lds	r24, 0x0448	; 0x800448 <__TEXT_REGION_LENGTH__+0x7e0448>
     6a2:	88 23       	and	r24, r24
     6a4:	1c f0       	brlt	.+6      	; 0x6ac <syringe_check_init+0xe>
	 {
		 syringe_detected = false;
     6a6:	10 92 68 40 	sts	0x4068, r1	; 0x804068 <__data_end>
     6aa:	07 c0       	rjmp	.+14     	; 0x6ba <syringe_check_init+0x1c>
	 }
	 else if ((PORTC.IN & PIN7_bm))
     6ac:	80 91 48 04 	lds	r24, 0x0448	; 0x800448 <__TEXT_REGION_LENGTH__+0x7e0448>
     6b0:	88 23       	and	r24, r24
     6b2:	1c f4       	brge	.+6      	; 0x6ba <syringe_check_init+0x1c>
	 {
		 syringe_detected = true;
     6b4:	81 e0       	ldi	r24, 0x01	; 1
     6b6:	80 93 68 40 	sts	0x4068, r24	; 0x804068 <__data_end>
	 }
	 USART1_sendInt(syringe_detected);
     6ba:	60 91 68 40 	lds	r22, 0x4068	; 0x804068 <__data_end>
     6be:	70 e0       	ldi	r23, 0x00	; 0
     6c0:	80 e0       	ldi	r24, 0x00	; 0
     6c2:	90 e0       	ldi	r25, 0x00	; 0
     6c4:	0e 94 ed 01 	call	0x3da	; 0x3da <USART1_sendInt>
     6c8:	08 95       	ret

000006ca <Occlusion_check>:


 /***********************occlusion check******************************************************/

 void Occlusion_check(float Avg) // occlusion check 60ml,20ml,10ml,5ml syringe
 {
     6ca:	cf 92       	push	r12
     6cc:	df 92       	push	r13
     6ce:	ef 92       	push	r14
     6d0:	ff 92       	push	r15
     6d2:	cf 93       	push	r28
     6d4:	df 93       	push	r29
     6d6:	6b 01       	movw	r12, r22
     6d8:	7c 01       	movw	r14, r24
	 if((syringe == 60) && ( Avg > _60ml_occlusion))
     6da:	c0 91 69 40 	lds	r28, 0x4069	; 0x804069 <syringe>
     6de:	d0 91 6a 40 	lds	r29, 0x406A	; 0x80406a <syringe+0x1>
     6e2:	cc 33       	cpi	r28, 0x3C	; 60
     6e4:	d1 05       	cpc	r29, r1
     6e6:	69 f4       	brne	.+26     	; 0x702 <Occlusion_check+0x38>
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	41 ee       	ldi	r20, 0xE1	; 225
     6ee:	54 e4       	ldi	r21, 0x44	; 68
     6f0:	0e 94 32 06 	call	0xc64	; 0xc64 <__gesf2>
     6f4:	18 16       	cp	r1, r24
     6f6:	2c f4       	brge	.+10     	; 0x702 <Occlusion_check+0x38>
	 {
		 USART1_sendString("occlusion_detected");
     6f8:	84 e5       	ldi	r24, 0x54	; 84
     6fa:	90 e4       	ldi	r25, 0x40	; 64
     6fc:	0e 94 cc 01 	call	0x398	; 0x398 <USART1_sendString>
     700:	34 c0       	rjmp	.+104    	; 0x76a <Occlusion_check+0xa0>
	 }
	 else if((syringe == 20) && (Avg > _20ml_occlusion))
     702:	c4 31       	cpi	r28, 0x14	; 20
     704:	d1 05       	cpc	r29, r1
     706:	79 f4       	brne	.+30     	; 0x726 <Occlusion_check+0x5c>
     708:	20 e0       	ldi	r18, 0x00	; 0
     70a:	30 e8       	ldi	r19, 0x80	; 128
     70c:	49 e8       	ldi	r20, 0x89	; 137
     70e:	54 e4       	ldi	r21, 0x44	; 68
     710:	c7 01       	movw	r24, r14
     712:	b6 01       	movw	r22, r12
     714:	0e 94 32 06 	call	0xc64	; 0xc64 <__gesf2>
     718:	18 16       	cp	r1, r24
     71a:	2c f4       	brge	.+10     	; 0x726 <Occlusion_check+0x5c>
	 {
		 USART1_sendString("occlusion_detected");
     71c:	84 e5       	ldi	r24, 0x54	; 84
     71e:	90 e4       	ldi	r25, 0x40	; 64
     720:	0e 94 cc 01 	call	0x398	; 0x398 <USART1_sendString>
     724:	22 c0       	rjmp	.+68     	; 0x76a <Occlusion_check+0xa0>
	 }
	 else if((syringe == 10) && (Avg > _10ml_occlusion))
     726:	ca 30       	cpi	r28, 0x0A	; 10
     728:	d1 05       	cpc	r29, r1
     72a:	79 f4       	brne	.+30     	; 0x74a <Occlusion_check+0x80>
     72c:	20 e0       	ldi	r18, 0x00	; 0
     72e:	30 e0       	ldi	r19, 0x00	; 0
     730:	48 e4       	ldi	r20, 0x48	; 72
     732:	54 e4       	ldi	r21, 0x44	; 68
     734:	c7 01       	movw	r24, r14
     736:	b6 01       	movw	r22, r12
     738:	0e 94 32 06 	call	0xc64	; 0xc64 <__gesf2>
     73c:	18 16       	cp	r1, r24
     73e:	2c f4       	brge	.+10     	; 0x74a <Occlusion_check+0x80>
	 {
		 USART1_sendString("occlusion_detected");
     740:	84 e5       	ldi	r24, 0x54	; 84
     742:	90 e4       	ldi	r25, 0x40	; 64
     744:	0e 94 cc 01 	call	0x398	; 0x398 <USART1_sendString>
     748:	10 c0       	rjmp	.+32     	; 0x76a <Occlusion_check+0xa0>
	 }
	 else if((syringe == 5) && (Avg > _5ml_occlusion))
     74a:	25 97       	sbiw	r28, 0x05	; 5
     74c:	71 f4       	brne	.+28     	; 0x76a <Occlusion_check+0xa0>
     74e:	20 e0       	ldi	r18, 0x00	; 0
     750:	30 e0       	ldi	r19, 0x00	; 0
     752:	4a ef       	ldi	r20, 0xFA	; 250
     754:	53 e4       	ldi	r21, 0x43	; 67
     756:	c7 01       	movw	r24, r14
     758:	b6 01       	movw	r22, r12
     75a:	0e 94 32 06 	call	0xc64	; 0xc64 <__gesf2>
     75e:	18 16       	cp	r1, r24
     760:	24 f4       	brge	.+8      	; 0x76a <Occlusion_check+0xa0>
	 {
		 USART1_sendString("occlusion_detected");
     762:	84 e5       	ldi	r24, 0x54	; 84
     764:	90 e4       	ldi	r25, 0x40	; 64
     766:	0e 94 cc 01 	call	0x398	; 0x398 <USART1_sendString>
	 }
 }
     76a:	df 91       	pop	r29
     76c:	cf 91       	pop	r28
     76e:	ff 90       	pop	r15
     770:	ef 90       	pop	r14
     772:	df 90       	pop	r13
     774:	cf 90       	pop	r12
     776:	08 95       	ret

00000778 <gpio_init>:

 /******************************gpio init*****************************************************/
 void gpio_init(void) 
 {
	 PORTA.DIR |= PIN4_bm | PIN6_bm; // Set the direction PIN4,PIN5,PIN6
     778:	e0 e0       	ldi	r30, 0x00	; 0
     77a:	f4 e0       	ldi	r31, 0x04	; 4
     77c:	80 81       	ld	r24, Z
     77e:	80 65       	ori	r24, 0x50	; 80
     780:	80 83       	st	Z, r24
	 PORTA.DIR &= ~(1 << 2); //DT AS INPUT
     782:	80 81       	ld	r24, Z
     784:	8b 7f       	andi	r24, 0xFB	; 251
     786:	80 83       	st	Z, r24
	 PORTA.DIR |= (1 << 3);  // SCK AS OUTPUT
     788:	80 81       	ld	r24, Z
     78a:	88 60       	ori	r24, 0x08	; 8
     78c:	80 83       	st	Z, r24
	// PORTC.DIR &= ~(1 << 7);
	 //PORTC.PIN7CTRL |= (0x1 << 0);//Interrupt enabled with sense on both edges
	 //PORTC.PIN7CTRL |=(0x1 << 0) || (1<<3);
	 PORTC.PIN7CTRL |= (0x02<<0); //Interrupt enabled with Rising edges
     78e:	e0 e4       	ldi	r30, 0x40	; 64
     790:	f4 e0       	ldi	r31, 0x04	; 4
     792:	87 89       	ldd	r24, Z+23	; 0x17
     794:	82 60       	ori	r24, 0x02	; 2
     796:	87 8b       	std	Z+23, r24	; 0x17
     798:	08 95       	ret

0000079a <Loadcell>:
 }

 /******************************************loadcell******************************************/
 float Loadcell(void) //fun with no argument but return value
 {
     79a:	8f 92       	push	r8
     79c:	9f 92       	push	r9
     79e:	af 92       	push	r10
     7a0:	bf 92       	push	r11
     7a2:	cf 92       	push	r12
     7a4:	df 92       	push	r13
     7a6:	ef 92       	push	r14
     7a8:	ff 92       	push	r15
     7aa:	0f 93       	push	r16
     7ac:	cf 93       	push	r28
     7ae:	df 93       	push	r29
	 float Avg=0.0;
	 //USART1_sendInt(ReadCount());
	 
	 for(int i = 0; i<5 ; i++)
     7b0:	c0 e0       	ldi	r28, 0x00	; 0
     7b2:	d0 e0       	ldi	r29, 0x00	; 0
     7b4:	31 c0       	rjmp	.+98     	; 0x818 <Loadcell+0x7e>
	 {
		 M_Weight = (float)((ReadCount()- 8417865) * 0.009328283582089); //WEIGHT SCALES
     7b6:	0e 94 1c 02 	call	0x438	; 0x438 <ReadCount>
     7ba:	69 54       	subi	r22, 0x49	; 73
     7bc:	72 47       	sbci	r23, 0x72	; 114
     7be:	80 48       	sbci	r24, 0x80	; 128
     7c0:	91 09       	sbc	r25, r1
     7c2:	0e 94 80 05 	call	0xb00	; 0xb00 <__floatunsisf>
     7c6:	28 ea       	ldi	r18, 0xA8	; 168
     7c8:	35 ed       	ldi	r19, 0xD5	; 213
     7ca:	48 e1       	ldi	r20, 0x18	; 24
     7cc:	5c e3       	ldi	r21, 0x3C	; 60
     7ce:	0e 94 37 06 	call	0xc6e	; 0xc6e <__mulsf3>
     7d2:	6b 01       	movw	r12, r22
     7d4:	7c 01       	movw	r14, r24
     7d6:	60 93 6b 40 	sts	0x406B, r22	; 0x80406b <M_Weight>
     7da:	70 93 6c 40 	sts	0x406C, r23	; 0x80406c <M_Weight+0x1>
     7de:	80 93 6d 40 	sts	0x406D, r24	; 0x80406d <M_Weight+0x2>
     7e2:	90 93 6e 40 	sts	0x406E, r25	; 0x80406e <M_Weight+0x3>
		 Loadcell_Value +=  M_Weight;
     7e6:	60 91 6f 40 	lds	r22, 0x406F	; 0x80406f <Loadcell_Value>
     7ea:	70 91 70 40 	lds	r23, 0x4070	; 0x804070 <Loadcell_Value+0x1>
     7ee:	80 91 71 40 	lds	r24, 0x4071	; 0x804071 <Loadcell_Value+0x2>
     7f2:	90 91 72 40 	lds	r25, 0x4072	; 0x804072 <Loadcell_Value+0x3>
     7f6:	0e 94 80 05 	call	0xb00	; 0xb00 <__floatunsisf>
     7fa:	a7 01       	movw	r20, r14
     7fc:	96 01       	movw	r18, r12
     7fe:	0e 94 67 04 	call	0x8ce	; 0x8ce <__addsf3>
     802:	0e 94 51 05 	call	0xaa2	; 0xaa2 <__fixunssfsi>
     806:	60 93 6f 40 	sts	0x406F, r22	; 0x80406f <Loadcell_Value>
     80a:	70 93 70 40 	sts	0x4070, r23	; 0x804070 <Loadcell_Value+0x1>
     80e:	80 93 71 40 	sts	0x4071, r24	; 0x804071 <Loadcell_Value+0x2>
     812:	90 93 72 40 	sts	0x4072, r25	; 0x804072 <Loadcell_Value+0x3>
 float Loadcell(void) //fun with no argument but return value
 {
	 float Avg=0.0;
	 //USART1_sendInt(ReadCount());
	 
	 for(int i = 0; i<5 ; i++)
     816:	21 96       	adiw	r28, 0x01	; 1
     818:	c5 30       	cpi	r28, 0x05	; 5
     81a:	d1 05       	cpc	r29, r1
     81c:	64 f2       	brlt	.-104    	; 0x7b6 <Loadcell+0x1c>
	 {
		 M_Weight = (float)((ReadCount()- 8417865) * 0.009328283582089); //WEIGHT SCALES
		 Loadcell_Value +=  M_Weight;
	 }
	 Avg = Loadcell_Value/5; //average value
     81e:	60 91 6f 40 	lds	r22, 0x406F	; 0x80406f <Loadcell_Value>
     822:	70 91 70 40 	lds	r23, 0x4070	; 0x804070 <Loadcell_Value+0x1>
     826:	80 91 71 40 	lds	r24, 0x4071	; 0x804071 <Loadcell_Value+0x2>
     82a:	90 91 72 40 	lds	r25, 0x4072	; 0x804072 <Loadcell_Value+0x3>
     82e:	2d ec       	ldi	r18, 0xCD	; 205
     830:	3c ec       	ldi	r19, 0xCC	; 204
     832:	4c ec       	ldi	r20, 0xCC	; 204
     834:	5c ec       	ldi	r21, 0xCC	; 204
     836:	0e 94 48 08 	call	0x1090	; 0x1090 <__umulsidi3>
     83a:	00 e2       	ldi	r16, 0x20	; 32
     83c:	0e 94 75 08 	call	0x10ea	; 0x10ea <__lshrdi3>
     840:	82 2e       	mov	r8, r18
     842:	93 2e       	mov	r9, r19
     844:	a4 2e       	mov	r10, r20
     846:	b5 2e       	mov	r11, r21
     848:	c5 01       	movw	r24, r10
     84a:	b4 01       	movw	r22, r8
     84c:	96 95       	lsr	r25
     84e:	87 95       	ror	r24
     850:	77 95       	ror	r23
     852:	67 95       	ror	r22
     854:	96 95       	lsr	r25
     856:	87 95       	ror	r24
     858:	77 95       	ror	r23
     85a:	67 95       	ror	r22
     85c:	0e 94 80 05 	call	0xb00	; 0xb00 <__floatunsisf>
     860:	6b 01       	movw	r12, r22
     862:	7c 01       	movw	r14, r24
	 //Loadcell_Value -=350;
	 USART1_sendFloat(Avg,2);
     864:	42 e0       	ldi	r20, 0x02	; 2
     866:	50 e0       	ldi	r21, 0x00	; 0
     868:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <USART1_sendFloat>
	 return Avg;
 }
     86c:	c7 01       	movw	r24, r14
     86e:	b6 01       	movw	r22, r12
     870:	df 91       	pop	r29
     872:	cf 91       	pop	r28
     874:	0f 91       	pop	r16
     876:	ff 90       	pop	r15
     878:	ef 90       	pop	r14
     87a:	df 90       	pop	r13
     87c:	cf 90       	pop	r12
     87e:	bf 90       	pop	r11
     880:	af 90       	pop	r10
     882:	9f 90       	pop	r9
     884:	8f 90       	pop	r8
     886:	08 95       	ret

00000888 <motoroff>:

 void motoroff(void)
 {
	 PORTA.OUTCLR &= ~PIN5_bm;
     888:	e0 e0       	ldi	r30, 0x00	; 0
     88a:	f4 e0       	ldi	r31, 0x04	; 4
     88c:	86 81       	ldd	r24, Z+6	; 0x06
     88e:	8f 7d       	andi	r24, 0xDF	; 223
     890:	86 83       	std	Z+6, r24	; 0x06
     892:	08 95       	ret

00000894 <main>:
 }

 int main(void)
 {
	 sei();
     894:	78 94       	sei
	 USART1_init(9600);
     896:	80 e8       	ldi	r24, 0x80	; 128
     898:	95 e2       	ldi	r25, 0x25	; 37
     89a:	0e 94 9a 01 	call	0x334	; 0x334 <USART1_init>
	 ADC0_init();
     89e:	0e 94 02 02 	call	0x404	; 0x404 <ADC0_init>
	 gpio_init();
     8a2:	0e 94 bc 03 	call	0x778	; 0x778 <gpio_init>
	 syringe_check_init();
     8a6:	0e 94 4f 03 	call	0x69e	; 0x69e <syringe_check_init>
	 while(1)
	 {
		 syringeforward();
     8aa:	0e 94 54 02 	call	0x4a8	; 0x4a8 <syringeforward>
// 		 if (run_ok_syringe)
// 		 {
// 			 ok_syringe();
// 			 run_ok_syringe = false;
// 		 }
		 Loadcell();
     8ae:	0e 94 cd 03 	call	0x79a	; 0x79a <Loadcell>
		 Occlusion_check(Avg);
     8b2:	60 91 77 40 	lds	r22, 0x4077	; 0x804077 <Avg>
     8b6:	70 91 78 40 	lds	r23, 0x4078	; 0x804078 <Avg+0x1>
     8ba:	80 91 79 40 	lds	r24, 0x4079	; 0x804079 <Avg+0x2>
     8be:	90 91 7a 40 	lds	r25, 0x407A	; 0x80407a <Avg+0x3>
     8c2:	0e 94 65 03 	call	0x6ca	; 0x6ca <Occlusion_check>
		 motoroff();
     8c6:	0e 94 44 04 	call	0x888	; 0x888 <motoroff>
     8ca:	ef cf       	rjmp	.-34     	; 0x8aa <main+0x16>

000008cc <__subsf3>:
     8cc:	50 58       	subi	r21, 0x80	; 128

000008ce <__addsf3>:
     8ce:	bb 27       	eor	r27, r27
     8d0:	aa 27       	eor	r26, r26
     8d2:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__addsf3x>
     8d6:	0c 94 f8 05 	jmp	0xbf0	; 0xbf0 <__fp_round>
     8da:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <__fp_pscA>
     8de:	38 f0       	brcs	.+14     	; 0x8ee <__addsf3+0x20>
     8e0:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <__fp_pscB>
     8e4:	20 f0       	brcs	.+8      	; 0x8ee <__addsf3+0x20>
     8e6:	39 f4       	brne	.+14     	; 0x8f6 <__addsf3+0x28>
     8e8:	9f 3f       	cpi	r25, 0xFF	; 255
     8ea:	19 f4       	brne	.+6      	; 0x8f2 <__addsf3+0x24>
     8ec:	26 f4       	brtc	.+8      	; 0x8f6 <__addsf3+0x28>
     8ee:	0c 94 e7 05 	jmp	0xbce	; 0xbce <__fp_nan>
     8f2:	0e f4       	brtc	.+2      	; 0x8f6 <__addsf3+0x28>
     8f4:	e0 95       	com	r30
     8f6:	e7 fb       	bst	r30, 7
     8f8:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <__fp_inf>

000008fc <__addsf3x>:
     8fc:	e9 2f       	mov	r30, r25
     8fe:	0e 94 09 06 	call	0xc12	; 0xc12 <__fp_split3>
     902:	58 f3       	brcs	.-42     	; 0x8da <__addsf3+0xc>
     904:	ba 17       	cp	r27, r26
     906:	62 07       	cpc	r22, r18
     908:	73 07       	cpc	r23, r19
     90a:	84 07       	cpc	r24, r20
     90c:	95 07       	cpc	r25, r21
     90e:	20 f0       	brcs	.+8      	; 0x918 <__addsf3x+0x1c>
     910:	79 f4       	brne	.+30     	; 0x930 <__addsf3x+0x34>
     912:	a6 f5       	brtc	.+104    	; 0x97c <__addsf3x+0x80>
     914:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__fp_zero>
     918:	0e f4       	brtc	.+2      	; 0x91c <__addsf3x+0x20>
     91a:	e0 95       	com	r30
     91c:	0b 2e       	mov	r0, r27
     91e:	ba 2f       	mov	r27, r26
     920:	a0 2d       	mov	r26, r0
     922:	0b 01       	movw	r0, r22
     924:	b9 01       	movw	r22, r18
     926:	90 01       	movw	r18, r0
     928:	0c 01       	movw	r0, r24
     92a:	ca 01       	movw	r24, r20
     92c:	a0 01       	movw	r20, r0
     92e:	11 24       	eor	r1, r1
     930:	ff 27       	eor	r31, r31
     932:	59 1b       	sub	r21, r25
     934:	99 f0       	breq	.+38     	; 0x95c <__addsf3x+0x60>
     936:	59 3f       	cpi	r21, 0xF9	; 249
     938:	50 f4       	brcc	.+20     	; 0x94e <__addsf3x+0x52>
     93a:	50 3e       	cpi	r21, 0xE0	; 224
     93c:	68 f1       	brcs	.+90     	; 0x998 <__addsf3x+0x9c>
     93e:	1a 16       	cp	r1, r26
     940:	f0 40       	sbci	r31, 0x00	; 0
     942:	a2 2f       	mov	r26, r18
     944:	23 2f       	mov	r18, r19
     946:	34 2f       	mov	r19, r20
     948:	44 27       	eor	r20, r20
     94a:	58 5f       	subi	r21, 0xF8	; 248
     94c:	f3 cf       	rjmp	.-26     	; 0x934 <__addsf3x+0x38>
     94e:	46 95       	lsr	r20
     950:	37 95       	ror	r19
     952:	27 95       	ror	r18
     954:	a7 95       	ror	r26
     956:	f0 40       	sbci	r31, 0x00	; 0
     958:	53 95       	inc	r21
     95a:	c9 f7       	brne	.-14     	; 0x94e <__addsf3x+0x52>
     95c:	7e f4       	brtc	.+30     	; 0x97c <__addsf3x+0x80>
     95e:	1f 16       	cp	r1, r31
     960:	ba 0b       	sbc	r27, r26
     962:	62 0b       	sbc	r22, r18
     964:	73 0b       	sbc	r23, r19
     966:	84 0b       	sbc	r24, r20
     968:	ba f0       	brmi	.+46     	; 0x998 <__addsf3x+0x9c>
     96a:	91 50       	subi	r25, 0x01	; 1
     96c:	a1 f0       	breq	.+40     	; 0x996 <__addsf3x+0x9a>
     96e:	ff 0f       	add	r31, r31
     970:	bb 1f       	adc	r27, r27
     972:	66 1f       	adc	r22, r22
     974:	77 1f       	adc	r23, r23
     976:	88 1f       	adc	r24, r24
     978:	c2 f7       	brpl	.-16     	; 0x96a <__addsf3x+0x6e>
     97a:	0e c0       	rjmp	.+28     	; 0x998 <__addsf3x+0x9c>
     97c:	ba 0f       	add	r27, r26
     97e:	62 1f       	adc	r22, r18
     980:	73 1f       	adc	r23, r19
     982:	84 1f       	adc	r24, r20
     984:	48 f4       	brcc	.+18     	; 0x998 <__addsf3x+0x9c>
     986:	87 95       	ror	r24
     988:	77 95       	ror	r23
     98a:	67 95       	ror	r22
     98c:	b7 95       	ror	r27
     98e:	f7 95       	ror	r31
     990:	9e 3f       	cpi	r25, 0xFE	; 254
     992:	08 f0       	brcs	.+2      	; 0x996 <__addsf3x+0x9a>
     994:	b0 cf       	rjmp	.-160    	; 0x8f6 <__addsf3+0x28>
     996:	93 95       	inc	r25
     998:	88 0f       	add	r24, r24
     99a:	08 f0       	brcs	.+2      	; 0x99e <__addsf3x+0xa2>
     99c:	99 27       	eor	r25, r25
     99e:	ee 0f       	add	r30, r30
     9a0:	97 95       	ror	r25
     9a2:	87 95       	ror	r24
     9a4:	08 95       	ret

000009a6 <__cmpsf2>:
     9a6:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__fp_cmp>
     9aa:	08 f4       	brcc	.+2      	; 0x9ae <__cmpsf2+0x8>
     9ac:	81 e0       	ldi	r24, 0x01	; 1
     9ae:	08 95       	ret

000009b0 <__divsf3>:
     9b0:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__divsf3x>
     9b4:	0c 94 f8 05 	jmp	0xbf0	; 0xbf0 <__fp_round>
     9b8:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <__fp_pscB>
     9bc:	58 f0       	brcs	.+22     	; 0x9d4 <__divsf3+0x24>
     9be:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <__fp_pscA>
     9c2:	40 f0       	brcs	.+16     	; 0x9d4 <__divsf3+0x24>
     9c4:	29 f4       	brne	.+10     	; 0x9d0 <__divsf3+0x20>
     9c6:	5f 3f       	cpi	r21, 0xFF	; 255
     9c8:	29 f0       	breq	.+10     	; 0x9d4 <__divsf3+0x24>
     9ca:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <__fp_inf>
     9ce:	51 11       	cpse	r21, r1
     9d0:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__fp_szero>
     9d4:	0c 94 e7 05 	jmp	0xbce	; 0xbce <__fp_nan>

000009d8 <__divsf3x>:
     9d8:	0e 94 09 06 	call	0xc12	; 0xc12 <__fp_split3>
     9dc:	68 f3       	brcs	.-38     	; 0x9b8 <__divsf3+0x8>

000009de <__divsf3_pse>:
     9de:	99 23       	and	r25, r25
     9e0:	b1 f3       	breq	.-20     	; 0x9ce <__divsf3+0x1e>
     9e2:	55 23       	and	r21, r21
     9e4:	91 f3       	breq	.-28     	; 0x9ca <__divsf3+0x1a>
     9e6:	95 1b       	sub	r25, r21
     9e8:	55 0b       	sbc	r21, r21
     9ea:	bb 27       	eor	r27, r27
     9ec:	aa 27       	eor	r26, r26
     9ee:	62 17       	cp	r22, r18
     9f0:	73 07       	cpc	r23, r19
     9f2:	84 07       	cpc	r24, r20
     9f4:	38 f0       	brcs	.+14     	; 0xa04 <__divsf3_pse+0x26>
     9f6:	9f 5f       	subi	r25, 0xFF	; 255
     9f8:	5f 4f       	sbci	r21, 0xFF	; 255
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	aa 1f       	adc	r26, r26
     a02:	a9 f3       	breq	.-22     	; 0x9ee <__divsf3_pse+0x10>
     a04:	35 d0       	rcall	.+106    	; 0xa70 <__divsf3_pse+0x92>
     a06:	0e 2e       	mov	r0, r30
     a08:	3a f0       	brmi	.+14     	; 0xa18 <__divsf3_pse+0x3a>
     a0a:	e0 e8       	ldi	r30, 0x80	; 128
     a0c:	32 d0       	rcall	.+100    	; 0xa72 <__divsf3_pse+0x94>
     a0e:	91 50       	subi	r25, 0x01	; 1
     a10:	50 40       	sbci	r21, 0x00	; 0
     a12:	e6 95       	lsr	r30
     a14:	00 1c       	adc	r0, r0
     a16:	ca f7       	brpl	.-14     	; 0xa0a <__divsf3_pse+0x2c>
     a18:	2b d0       	rcall	.+86     	; 0xa70 <__divsf3_pse+0x92>
     a1a:	fe 2f       	mov	r31, r30
     a1c:	29 d0       	rcall	.+82     	; 0xa70 <__divsf3_pse+0x92>
     a1e:	66 0f       	add	r22, r22
     a20:	77 1f       	adc	r23, r23
     a22:	88 1f       	adc	r24, r24
     a24:	bb 1f       	adc	r27, r27
     a26:	26 17       	cp	r18, r22
     a28:	37 07       	cpc	r19, r23
     a2a:	48 07       	cpc	r20, r24
     a2c:	ab 07       	cpc	r26, r27
     a2e:	b0 e8       	ldi	r27, 0x80	; 128
     a30:	09 f0       	breq	.+2      	; 0xa34 <__divsf3_pse+0x56>
     a32:	bb 0b       	sbc	r27, r27
     a34:	80 2d       	mov	r24, r0
     a36:	bf 01       	movw	r22, r30
     a38:	ff 27       	eor	r31, r31
     a3a:	93 58       	subi	r25, 0x83	; 131
     a3c:	5f 4f       	sbci	r21, 0xFF	; 255
     a3e:	3a f0       	brmi	.+14     	; 0xa4e <__divsf3_pse+0x70>
     a40:	9e 3f       	cpi	r25, 0xFE	; 254
     a42:	51 05       	cpc	r21, r1
     a44:	78 f0       	brcs	.+30     	; 0xa64 <__divsf3_pse+0x86>
     a46:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <__fp_inf>
     a4a:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__fp_szero>
     a4e:	5f 3f       	cpi	r21, 0xFF	; 255
     a50:	e4 f3       	brlt	.-8      	; 0xa4a <__divsf3_pse+0x6c>
     a52:	98 3e       	cpi	r25, 0xE8	; 232
     a54:	d4 f3       	brlt	.-12     	; 0xa4a <__divsf3_pse+0x6c>
     a56:	86 95       	lsr	r24
     a58:	77 95       	ror	r23
     a5a:	67 95       	ror	r22
     a5c:	b7 95       	ror	r27
     a5e:	f7 95       	ror	r31
     a60:	9f 5f       	subi	r25, 0xFF	; 255
     a62:	c9 f7       	brne	.-14     	; 0xa56 <__divsf3_pse+0x78>
     a64:	88 0f       	add	r24, r24
     a66:	91 1d       	adc	r25, r1
     a68:	96 95       	lsr	r25
     a6a:	87 95       	ror	r24
     a6c:	97 f9       	bld	r25, 7
     a6e:	08 95       	ret
     a70:	e1 e0       	ldi	r30, 0x01	; 1
     a72:	66 0f       	add	r22, r22
     a74:	77 1f       	adc	r23, r23
     a76:	88 1f       	adc	r24, r24
     a78:	bb 1f       	adc	r27, r27
     a7a:	62 17       	cp	r22, r18
     a7c:	73 07       	cpc	r23, r19
     a7e:	84 07       	cpc	r24, r20
     a80:	ba 07       	cpc	r27, r26
     a82:	20 f0       	brcs	.+8      	; 0xa8c <__divsf3_pse+0xae>
     a84:	62 1b       	sub	r22, r18
     a86:	73 0b       	sbc	r23, r19
     a88:	84 0b       	sbc	r24, r20
     a8a:	ba 0b       	sbc	r27, r26
     a8c:	ee 1f       	adc	r30, r30
     a8e:	88 f7       	brcc	.-30     	; 0xa72 <__divsf3_pse+0x94>
     a90:	e0 95       	com	r30
     a92:	08 95       	ret

00000a94 <__fixsfsi>:
     a94:	0e 94 51 05 	call	0xaa2	; 0xaa2 <__fixunssfsi>
     a98:	68 94       	set
     a9a:	b1 11       	cpse	r27, r1
     a9c:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__fp_szero>
     aa0:	08 95       	ret

00000aa2 <__fixunssfsi>:
     aa2:	0e 94 11 06 	call	0xc22	; 0xc22 <__fp_splitA>
     aa6:	88 f0       	brcs	.+34     	; 0xaca <__fixunssfsi+0x28>
     aa8:	9f 57       	subi	r25, 0x7F	; 127
     aaa:	98 f0       	brcs	.+38     	; 0xad2 <__fixunssfsi+0x30>
     aac:	b9 2f       	mov	r27, r25
     aae:	99 27       	eor	r25, r25
     ab0:	b7 51       	subi	r27, 0x17	; 23
     ab2:	b0 f0       	brcs	.+44     	; 0xae0 <__fixunssfsi+0x3e>
     ab4:	e1 f0       	breq	.+56     	; 0xaee <__fixunssfsi+0x4c>
     ab6:	66 0f       	add	r22, r22
     ab8:	77 1f       	adc	r23, r23
     aba:	88 1f       	adc	r24, r24
     abc:	99 1f       	adc	r25, r25
     abe:	1a f0       	brmi	.+6      	; 0xac6 <__fixunssfsi+0x24>
     ac0:	ba 95       	dec	r27
     ac2:	c9 f7       	brne	.-14     	; 0xab6 <__fixunssfsi+0x14>
     ac4:	14 c0       	rjmp	.+40     	; 0xaee <__fixunssfsi+0x4c>
     ac6:	b1 30       	cpi	r27, 0x01	; 1
     ac8:	91 f0       	breq	.+36     	; 0xaee <__fixunssfsi+0x4c>
     aca:	0e 94 2b 06 	call	0xc56	; 0xc56 <__fp_zero>
     ace:	b1 e0       	ldi	r27, 0x01	; 1
     ad0:	08 95       	ret
     ad2:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__fp_zero>
     ad6:	67 2f       	mov	r22, r23
     ad8:	78 2f       	mov	r23, r24
     ada:	88 27       	eor	r24, r24
     adc:	b8 5f       	subi	r27, 0xF8	; 248
     ade:	39 f0       	breq	.+14     	; 0xaee <__fixunssfsi+0x4c>
     ae0:	b9 3f       	cpi	r27, 0xF9	; 249
     ae2:	cc f3       	brlt	.-14     	; 0xad6 <__fixunssfsi+0x34>
     ae4:	86 95       	lsr	r24
     ae6:	77 95       	ror	r23
     ae8:	67 95       	ror	r22
     aea:	b3 95       	inc	r27
     aec:	d9 f7       	brne	.-10     	; 0xae4 <__fixunssfsi+0x42>
     aee:	3e f4       	brtc	.+14     	; 0xafe <__fixunssfsi+0x5c>
     af0:	90 95       	com	r25
     af2:	80 95       	com	r24
     af4:	70 95       	com	r23
     af6:	61 95       	neg	r22
     af8:	7f 4f       	sbci	r23, 0xFF	; 255
     afa:	8f 4f       	sbci	r24, 0xFF	; 255
     afc:	9f 4f       	sbci	r25, 0xFF	; 255
     afe:	08 95       	ret

00000b00 <__floatunsisf>:
     b00:	e8 94       	clt
     b02:	09 c0       	rjmp	.+18     	; 0xb16 <__floatsisf+0x12>

00000b04 <__floatsisf>:
     b04:	97 fb       	bst	r25, 7
     b06:	3e f4       	brtc	.+14     	; 0xb16 <__floatsisf+0x12>
     b08:	90 95       	com	r25
     b0a:	80 95       	com	r24
     b0c:	70 95       	com	r23
     b0e:	61 95       	neg	r22
     b10:	7f 4f       	sbci	r23, 0xFF	; 255
     b12:	8f 4f       	sbci	r24, 0xFF	; 255
     b14:	9f 4f       	sbci	r25, 0xFF	; 255
     b16:	99 23       	and	r25, r25
     b18:	a9 f0       	breq	.+42     	; 0xb44 <__floatsisf+0x40>
     b1a:	f9 2f       	mov	r31, r25
     b1c:	96 e9       	ldi	r25, 0x96	; 150
     b1e:	bb 27       	eor	r27, r27
     b20:	93 95       	inc	r25
     b22:	f6 95       	lsr	r31
     b24:	87 95       	ror	r24
     b26:	77 95       	ror	r23
     b28:	67 95       	ror	r22
     b2a:	b7 95       	ror	r27
     b2c:	f1 11       	cpse	r31, r1
     b2e:	f8 cf       	rjmp	.-16     	; 0xb20 <__floatsisf+0x1c>
     b30:	fa f4       	brpl	.+62     	; 0xb70 <__floatsisf+0x6c>
     b32:	bb 0f       	add	r27, r27
     b34:	11 f4       	brne	.+4      	; 0xb3a <__floatsisf+0x36>
     b36:	60 ff       	sbrs	r22, 0
     b38:	1b c0       	rjmp	.+54     	; 0xb70 <__floatsisf+0x6c>
     b3a:	6f 5f       	subi	r22, 0xFF	; 255
     b3c:	7f 4f       	sbci	r23, 0xFF	; 255
     b3e:	8f 4f       	sbci	r24, 0xFF	; 255
     b40:	9f 4f       	sbci	r25, 0xFF	; 255
     b42:	16 c0       	rjmp	.+44     	; 0xb70 <__floatsisf+0x6c>
     b44:	88 23       	and	r24, r24
     b46:	11 f0       	breq	.+4      	; 0xb4c <__floatsisf+0x48>
     b48:	96 e9       	ldi	r25, 0x96	; 150
     b4a:	11 c0       	rjmp	.+34     	; 0xb6e <__floatsisf+0x6a>
     b4c:	77 23       	and	r23, r23
     b4e:	21 f0       	breq	.+8      	; 0xb58 <__floatsisf+0x54>
     b50:	9e e8       	ldi	r25, 0x8E	; 142
     b52:	87 2f       	mov	r24, r23
     b54:	76 2f       	mov	r23, r22
     b56:	05 c0       	rjmp	.+10     	; 0xb62 <__floatsisf+0x5e>
     b58:	66 23       	and	r22, r22
     b5a:	71 f0       	breq	.+28     	; 0xb78 <__floatsisf+0x74>
     b5c:	96 e8       	ldi	r25, 0x86	; 134
     b5e:	86 2f       	mov	r24, r22
     b60:	70 e0       	ldi	r23, 0x00	; 0
     b62:	60 e0       	ldi	r22, 0x00	; 0
     b64:	2a f0       	brmi	.+10     	; 0xb70 <__floatsisf+0x6c>
     b66:	9a 95       	dec	r25
     b68:	66 0f       	add	r22, r22
     b6a:	77 1f       	adc	r23, r23
     b6c:	88 1f       	adc	r24, r24
     b6e:	da f7       	brpl	.-10     	; 0xb66 <__floatsisf+0x62>
     b70:	88 0f       	add	r24, r24
     b72:	96 95       	lsr	r25
     b74:	87 95       	ror	r24
     b76:	97 f9       	bld	r25, 7
     b78:	08 95       	ret

00000b7a <__fp_cmp>:
     b7a:	99 0f       	add	r25, r25
     b7c:	00 08       	sbc	r0, r0
     b7e:	55 0f       	add	r21, r21
     b80:	aa 0b       	sbc	r26, r26
     b82:	e0 e8       	ldi	r30, 0x80	; 128
     b84:	fe ef       	ldi	r31, 0xFE	; 254
     b86:	16 16       	cp	r1, r22
     b88:	17 06       	cpc	r1, r23
     b8a:	e8 07       	cpc	r30, r24
     b8c:	f9 07       	cpc	r31, r25
     b8e:	c0 f0       	brcs	.+48     	; 0xbc0 <__fp_cmp+0x46>
     b90:	12 16       	cp	r1, r18
     b92:	13 06       	cpc	r1, r19
     b94:	e4 07       	cpc	r30, r20
     b96:	f5 07       	cpc	r31, r21
     b98:	98 f0       	brcs	.+38     	; 0xbc0 <__fp_cmp+0x46>
     b9a:	62 1b       	sub	r22, r18
     b9c:	73 0b       	sbc	r23, r19
     b9e:	84 0b       	sbc	r24, r20
     ba0:	95 0b       	sbc	r25, r21
     ba2:	39 f4       	brne	.+14     	; 0xbb2 <__fp_cmp+0x38>
     ba4:	0a 26       	eor	r0, r26
     ba6:	61 f0       	breq	.+24     	; 0xbc0 <__fp_cmp+0x46>
     ba8:	23 2b       	or	r18, r19
     baa:	24 2b       	or	r18, r20
     bac:	25 2b       	or	r18, r21
     bae:	21 f4       	brne	.+8      	; 0xbb8 <__fp_cmp+0x3e>
     bb0:	08 95       	ret
     bb2:	0a 26       	eor	r0, r26
     bb4:	09 f4       	brne	.+2      	; 0xbb8 <__fp_cmp+0x3e>
     bb6:	a1 40       	sbci	r26, 0x01	; 1
     bb8:	a6 95       	lsr	r26
     bba:	8f ef       	ldi	r24, 0xFF	; 255
     bbc:	81 1d       	adc	r24, r1
     bbe:	81 1d       	adc	r24, r1
     bc0:	08 95       	ret

00000bc2 <__fp_inf>:
     bc2:	97 f9       	bld	r25, 7
     bc4:	9f 67       	ori	r25, 0x7F	; 127
     bc6:	80 e8       	ldi	r24, 0x80	; 128
     bc8:	70 e0       	ldi	r23, 0x00	; 0
     bca:	60 e0       	ldi	r22, 0x00	; 0
     bcc:	08 95       	ret

00000bce <__fp_nan>:
     bce:	9f ef       	ldi	r25, 0xFF	; 255
     bd0:	80 ec       	ldi	r24, 0xC0	; 192
     bd2:	08 95       	ret

00000bd4 <__fp_pscA>:
     bd4:	00 24       	eor	r0, r0
     bd6:	0a 94       	dec	r0
     bd8:	16 16       	cp	r1, r22
     bda:	17 06       	cpc	r1, r23
     bdc:	18 06       	cpc	r1, r24
     bde:	09 06       	cpc	r0, r25
     be0:	08 95       	ret

00000be2 <__fp_pscB>:
     be2:	00 24       	eor	r0, r0
     be4:	0a 94       	dec	r0
     be6:	12 16       	cp	r1, r18
     be8:	13 06       	cpc	r1, r19
     bea:	14 06       	cpc	r1, r20
     bec:	05 06       	cpc	r0, r21
     bee:	08 95       	ret

00000bf0 <__fp_round>:
     bf0:	09 2e       	mov	r0, r25
     bf2:	03 94       	inc	r0
     bf4:	00 0c       	add	r0, r0
     bf6:	11 f4       	brne	.+4      	; 0xbfc <__fp_round+0xc>
     bf8:	88 23       	and	r24, r24
     bfa:	52 f0       	brmi	.+20     	; 0xc10 <__fp_round+0x20>
     bfc:	bb 0f       	add	r27, r27
     bfe:	40 f4       	brcc	.+16     	; 0xc10 <__fp_round+0x20>
     c00:	bf 2b       	or	r27, r31
     c02:	11 f4       	brne	.+4      	; 0xc08 <__fp_round+0x18>
     c04:	60 ff       	sbrs	r22, 0
     c06:	04 c0       	rjmp	.+8      	; 0xc10 <__fp_round+0x20>
     c08:	6f 5f       	subi	r22, 0xFF	; 255
     c0a:	7f 4f       	sbci	r23, 0xFF	; 255
     c0c:	8f 4f       	sbci	r24, 0xFF	; 255
     c0e:	9f 4f       	sbci	r25, 0xFF	; 255
     c10:	08 95       	ret

00000c12 <__fp_split3>:
     c12:	57 fd       	sbrc	r21, 7
     c14:	90 58       	subi	r25, 0x80	; 128
     c16:	44 0f       	add	r20, r20
     c18:	55 1f       	adc	r21, r21
     c1a:	59 f0       	breq	.+22     	; 0xc32 <__fp_splitA+0x10>
     c1c:	5f 3f       	cpi	r21, 0xFF	; 255
     c1e:	71 f0       	breq	.+28     	; 0xc3c <__fp_splitA+0x1a>
     c20:	47 95       	ror	r20

00000c22 <__fp_splitA>:
     c22:	88 0f       	add	r24, r24
     c24:	97 fb       	bst	r25, 7
     c26:	99 1f       	adc	r25, r25
     c28:	61 f0       	breq	.+24     	; 0xc42 <__fp_splitA+0x20>
     c2a:	9f 3f       	cpi	r25, 0xFF	; 255
     c2c:	79 f0       	breq	.+30     	; 0xc4c <__fp_splitA+0x2a>
     c2e:	87 95       	ror	r24
     c30:	08 95       	ret
     c32:	12 16       	cp	r1, r18
     c34:	13 06       	cpc	r1, r19
     c36:	14 06       	cpc	r1, r20
     c38:	55 1f       	adc	r21, r21
     c3a:	f2 cf       	rjmp	.-28     	; 0xc20 <__fp_split3+0xe>
     c3c:	46 95       	lsr	r20
     c3e:	f1 df       	rcall	.-30     	; 0xc22 <__fp_splitA>
     c40:	08 c0       	rjmp	.+16     	; 0xc52 <__fp_splitA+0x30>
     c42:	16 16       	cp	r1, r22
     c44:	17 06       	cpc	r1, r23
     c46:	18 06       	cpc	r1, r24
     c48:	99 1f       	adc	r25, r25
     c4a:	f1 cf       	rjmp	.-30     	; 0xc2e <__fp_splitA+0xc>
     c4c:	86 95       	lsr	r24
     c4e:	71 05       	cpc	r23, r1
     c50:	61 05       	cpc	r22, r1
     c52:	08 94       	sec
     c54:	08 95       	ret

00000c56 <__fp_zero>:
     c56:	e8 94       	clt

00000c58 <__fp_szero>:
     c58:	bb 27       	eor	r27, r27
     c5a:	66 27       	eor	r22, r22
     c5c:	77 27       	eor	r23, r23
     c5e:	cb 01       	movw	r24, r22
     c60:	97 f9       	bld	r25, 7
     c62:	08 95       	ret

00000c64 <__gesf2>:
     c64:	0e 94 bd 05 	call	0xb7a	; 0xb7a <__fp_cmp>
     c68:	08 f4       	brcc	.+2      	; 0xc6c <__gesf2+0x8>
     c6a:	8f ef       	ldi	r24, 0xFF	; 255
     c6c:	08 95       	ret

00000c6e <__mulsf3>:
     c6e:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3x>
     c72:	0c 94 f8 05 	jmp	0xbf0	; 0xbf0 <__fp_round>
     c76:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <__fp_pscA>
     c7a:	38 f0       	brcs	.+14     	; 0xc8a <__mulsf3+0x1c>
     c7c:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <__fp_pscB>
     c80:	20 f0       	brcs	.+8      	; 0xc8a <__mulsf3+0x1c>
     c82:	95 23       	and	r25, r21
     c84:	11 f0       	breq	.+4      	; 0xc8a <__mulsf3+0x1c>
     c86:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <__fp_inf>
     c8a:	0c 94 e7 05 	jmp	0xbce	; 0xbce <__fp_nan>
     c8e:	11 24       	eor	r1, r1
     c90:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__fp_szero>

00000c94 <__mulsf3x>:
     c94:	0e 94 09 06 	call	0xc12	; 0xc12 <__fp_split3>
     c98:	70 f3       	brcs	.-36     	; 0xc76 <__mulsf3+0x8>

00000c9a <__mulsf3_pse>:
     c9a:	95 9f       	mul	r25, r21
     c9c:	c1 f3       	breq	.-16     	; 0xc8e <__mulsf3+0x20>
     c9e:	95 0f       	add	r25, r21
     ca0:	50 e0       	ldi	r21, 0x00	; 0
     ca2:	55 1f       	adc	r21, r21
     ca4:	62 9f       	mul	r22, r18
     ca6:	f0 01       	movw	r30, r0
     ca8:	72 9f       	mul	r23, r18
     caa:	bb 27       	eor	r27, r27
     cac:	f0 0d       	add	r31, r0
     cae:	b1 1d       	adc	r27, r1
     cb0:	63 9f       	mul	r22, r19
     cb2:	aa 27       	eor	r26, r26
     cb4:	f0 0d       	add	r31, r0
     cb6:	b1 1d       	adc	r27, r1
     cb8:	aa 1f       	adc	r26, r26
     cba:	64 9f       	mul	r22, r20
     cbc:	66 27       	eor	r22, r22
     cbe:	b0 0d       	add	r27, r0
     cc0:	a1 1d       	adc	r26, r1
     cc2:	66 1f       	adc	r22, r22
     cc4:	82 9f       	mul	r24, r18
     cc6:	22 27       	eor	r18, r18
     cc8:	b0 0d       	add	r27, r0
     cca:	a1 1d       	adc	r26, r1
     ccc:	62 1f       	adc	r22, r18
     cce:	73 9f       	mul	r23, r19
     cd0:	b0 0d       	add	r27, r0
     cd2:	a1 1d       	adc	r26, r1
     cd4:	62 1f       	adc	r22, r18
     cd6:	83 9f       	mul	r24, r19
     cd8:	a0 0d       	add	r26, r0
     cda:	61 1d       	adc	r22, r1
     cdc:	22 1f       	adc	r18, r18
     cde:	74 9f       	mul	r23, r20
     ce0:	33 27       	eor	r19, r19
     ce2:	a0 0d       	add	r26, r0
     ce4:	61 1d       	adc	r22, r1
     ce6:	23 1f       	adc	r18, r19
     ce8:	84 9f       	mul	r24, r20
     cea:	60 0d       	add	r22, r0
     cec:	21 1d       	adc	r18, r1
     cee:	82 2f       	mov	r24, r18
     cf0:	76 2f       	mov	r23, r22
     cf2:	6a 2f       	mov	r22, r26
     cf4:	11 24       	eor	r1, r1
     cf6:	9f 57       	subi	r25, 0x7F	; 127
     cf8:	50 40       	sbci	r21, 0x00	; 0
     cfa:	9a f0       	brmi	.+38     	; 0xd22 <__mulsf3_pse+0x88>
     cfc:	f1 f0       	breq	.+60     	; 0xd3a <__mulsf3_pse+0xa0>
     cfe:	88 23       	and	r24, r24
     d00:	4a f0       	brmi	.+18     	; 0xd14 <__mulsf3_pse+0x7a>
     d02:	ee 0f       	add	r30, r30
     d04:	ff 1f       	adc	r31, r31
     d06:	bb 1f       	adc	r27, r27
     d08:	66 1f       	adc	r22, r22
     d0a:	77 1f       	adc	r23, r23
     d0c:	88 1f       	adc	r24, r24
     d0e:	91 50       	subi	r25, 0x01	; 1
     d10:	50 40       	sbci	r21, 0x00	; 0
     d12:	a9 f7       	brne	.-22     	; 0xcfe <__mulsf3_pse+0x64>
     d14:	9e 3f       	cpi	r25, 0xFE	; 254
     d16:	51 05       	cpc	r21, r1
     d18:	80 f0       	brcs	.+32     	; 0xd3a <__mulsf3_pse+0xa0>
     d1a:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <__fp_inf>
     d1e:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__fp_szero>
     d22:	5f 3f       	cpi	r21, 0xFF	; 255
     d24:	e4 f3       	brlt	.-8      	; 0xd1e <__mulsf3_pse+0x84>
     d26:	98 3e       	cpi	r25, 0xE8	; 232
     d28:	d4 f3       	brlt	.-12     	; 0xd1e <__mulsf3_pse+0x84>
     d2a:	86 95       	lsr	r24
     d2c:	77 95       	ror	r23
     d2e:	67 95       	ror	r22
     d30:	b7 95       	ror	r27
     d32:	f7 95       	ror	r31
     d34:	e7 95       	ror	r30
     d36:	9f 5f       	subi	r25, 0xFF	; 255
     d38:	c1 f7       	brne	.-16     	; 0xd2a <__mulsf3_pse+0x90>
     d3a:	fe 2b       	or	r31, r30
     d3c:	88 0f       	add	r24, r24
     d3e:	91 1d       	adc	r25, r1
     d40:	96 95       	lsr	r25
     d42:	87 95       	ror	r24
     d44:	97 f9       	bld	r25, 7
     d46:	08 95       	ret

00000d48 <pow>:
     d48:	fa 01       	movw	r30, r20
     d4a:	ee 0f       	add	r30, r30
     d4c:	ff 1f       	adc	r31, r31
     d4e:	30 96       	adiw	r30, 0x00	; 0
     d50:	21 05       	cpc	r18, r1
     d52:	31 05       	cpc	r19, r1
     d54:	a1 f1       	breq	.+104    	; 0xdbe <pow+0x76>
     d56:	61 15       	cp	r22, r1
     d58:	71 05       	cpc	r23, r1
     d5a:	61 f4       	brne	.+24     	; 0xd74 <pow+0x2c>
     d5c:	80 38       	cpi	r24, 0x80	; 128
     d5e:	bf e3       	ldi	r27, 0x3F	; 63
     d60:	9b 07       	cpc	r25, r27
     d62:	49 f1       	breq	.+82     	; 0xdb6 <pow+0x6e>
     d64:	68 94       	set
     d66:	90 38       	cpi	r25, 0x80	; 128
     d68:	81 05       	cpc	r24, r1
     d6a:	61 f0       	breq	.+24     	; 0xd84 <pow+0x3c>
     d6c:	80 38       	cpi	r24, 0x80	; 128
     d6e:	bf ef       	ldi	r27, 0xFF	; 255
     d70:	9b 07       	cpc	r25, r27
     d72:	41 f0       	breq	.+16     	; 0xd84 <pow+0x3c>
     d74:	99 23       	and	r25, r25
     d76:	4a f5       	brpl	.+82     	; 0xdca <pow+0x82>
     d78:	ff 3f       	cpi	r31, 0xFF	; 255
     d7a:	e1 05       	cpc	r30, r1
     d7c:	31 05       	cpc	r19, r1
     d7e:	21 05       	cpc	r18, r1
     d80:	19 f1       	breq	.+70     	; 0xdc8 <pow+0x80>
     d82:	e8 94       	clt
     d84:	08 94       	sec
     d86:	e7 95       	ror	r30
     d88:	d9 01       	movw	r26, r18
     d8a:	aa 23       	and	r26, r26
     d8c:	29 f4       	brne	.+10     	; 0xd98 <pow+0x50>
     d8e:	ab 2f       	mov	r26, r27
     d90:	be 2f       	mov	r27, r30
     d92:	f8 5f       	subi	r31, 0xF8	; 248
     d94:	d0 f3       	brcs	.-12     	; 0xd8a <pow+0x42>
     d96:	10 c0       	rjmp	.+32     	; 0xdb8 <pow+0x70>
     d98:	ff 5f       	subi	r31, 0xFF	; 255
     d9a:	70 f4       	brcc	.+28     	; 0xdb8 <pow+0x70>
     d9c:	a6 95       	lsr	r26
     d9e:	e0 f7       	brcc	.-8      	; 0xd98 <pow+0x50>
     da0:	f7 39       	cpi	r31, 0x97	; 151
     da2:	50 f0       	brcs	.+20     	; 0xdb8 <pow+0x70>
     da4:	19 f0       	breq	.+6      	; 0xdac <pow+0x64>
     da6:	ff 3a       	cpi	r31, 0xAF	; 175
     da8:	38 f4       	brcc	.+14     	; 0xdb8 <pow+0x70>
     daa:	9f 77       	andi	r25, 0x7F	; 127
     dac:	9f 93       	push	r25
     dae:	0d d0       	rcall	.+26     	; 0xdca <pow+0x82>
     db0:	0f 90       	pop	r0
     db2:	07 fc       	sbrc	r0, 7
     db4:	90 58       	subi	r25, 0x80	; 128
     db6:	08 95       	ret
     db8:	46 f0       	brts	.+16     	; 0xdca <pow+0x82>
     dba:	0c 94 e7 05 	jmp	0xbce	; 0xbce <__fp_nan>
     dbe:	60 e0       	ldi	r22, 0x00	; 0
     dc0:	70 e0       	ldi	r23, 0x00	; 0
     dc2:	80 e8       	ldi	r24, 0x80	; 128
     dc4:	9f e3       	ldi	r25, 0x3F	; 63
     dc6:	08 95       	ret
     dc8:	4f e7       	ldi	r20, 0x7F	; 127
     dca:	9f 77       	andi	r25, 0x7F	; 127
     dcc:	5f 93       	push	r21
     dce:	4f 93       	push	r20
     dd0:	3f 93       	push	r19
     dd2:	2f 93       	push	r18
     dd4:	0e 94 9f 07 	call	0xf3e	; 0xf3e <log>
     dd8:	2f 91       	pop	r18
     dda:	3f 91       	pop	r19
     ddc:	4f 91       	pop	r20
     dde:	5f 91       	pop	r21
     de0:	0e 94 37 06 	call	0xc6e	; 0xc6e <__mulsf3>
     de4:	0c 94 fc 06 	jmp	0xdf8	; 0xdf8 <exp>
     de8:	29 f4       	brne	.+10     	; 0xdf4 <pow+0xac>
     dea:	16 f0       	brts	.+4      	; 0xdf0 <pow+0xa8>
     dec:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <__fp_inf>
     df0:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__fp_zero>
     df4:	0c 94 e7 05 	jmp	0xbce	; 0xbce <__fp_nan>

00000df8 <exp>:
     df8:	0e 94 11 06 	call	0xc22	; 0xc22 <__fp_splitA>
     dfc:	a8 f3       	brcs	.-22     	; 0xde8 <pow+0xa0>
     dfe:	96 38       	cpi	r25, 0x86	; 134
     e00:	a0 f7       	brcc	.-24     	; 0xdea <pow+0xa2>
     e02:	07 f8       	bld	r0, 7
     e04:	0f 92       	push	r0
     e06:	e8 94       	clt
     e08:	2b e3       	ldi	r18, 0x3B	; 59
     e0a:	3a ea       	ldi	r19, 0xAA	; 170
     e0c:	48 eb       	ldi	r20, 0xB8	; 184
     e0e:	5f e7       	ldi	r21, 0x7F	; 127
     e10:	0e 94 4d 06 	call	0xc9a	; 0xc9a <__mulsf3_pse>
     e14:	0f 92       	push	r0
     e16:	0f 92       	push	r0
     e18:	0f 92       	push	r0
     e1a:	4d b7       	in	r20, 0x3d	; 61
     e1c:	5e b7       	in	r21, 0x3e	; 62
     e1e:	0f 92       	push	r0
     e20:	0e 94 e7 07 	call	0xfce	; 0xfce <modf>
     e24:	e0 e0       	ldi	r30, 0x00	; 0
     e26:	f1 e0       	ldi	r31, 0x01	; 1
     e28:	0e 94 2e 07 	call	0xe5c	; 0xe5c <__fp_powser>
     e2c:	4f 91       	pop	r20
     e2e:	5f 91       	pop	r21
     e30:	ef 91       	pop	r30
     e32:	ff 91       	pop	r31
     e34:	e5 95       	asr	r30
     e36:	ee 1f       	adc	r30, r30
     e38:	ff 1f       	adc	r31, r31
     e3a:	49 f0       	breq	.+18     	; 0xe4e <exp+0x56>
     e3c:	fe 57       	subi	r31, 0x7E	; 126
     e3e:	e0 68       	ori	r30, 0x80	; 128
     e40:	44 27       	eor	r20, r20
     e42:	ee 0f       	add	r30, r30
     e44:	44 1f       	adc	r20, r20
     e46:	fa 95       	dec	r31
     e48:	e1 f7       	brne	.-8      	; 0xe42 <exp+0x4a>
     e4a:	41 95       	neg	r20
     e4c:	55 0b       	sbc	r21, r21
     e4e:	0e 94 61 07 	call	0xec2	; 0xec2 <ldexp>
     e52:	0f 90       	pop	r0
     e54:	07 fe       	sbrs	r0, 7
     e56:	0c 94 55 07 	jmp	0xeaa	; 0xeaa <inverse>
     e5a:	08 95       	ret

00000e5c <__fp_powser>:
     e5c:	df 93       	push	r29
     e5e:	cf 93       	push	r28
     e60:	1f 93       	push	r17
     e62:	0f 93       	push	r16
     e64:	ff 92       	push	r15
     e66:	ef 92       	push	r14
     e68:	df 92       	push	r13
     e6a:	7b 01       	movw	r14, r22
     e6c:	8c 01       	movw	r16, r24
     e6e:	68 94       	set
     e70:	06 c0       	rjmp	.+12     	; 0xe7e <__fp_powser+0x22>
     e72:	da 2e       	mov	r13, r26
     e74:	ef 01       	movw	r28, r30
     e76:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3x>
     e7a:	fe 01       	movw	r30, r28
     e7c:	e8 94       	clt
     e7e:	a5 91       	lpm	r26, Z+
     e80:	25 91       	lpm	r18, Z+
     e82:	35 91       	lpm	r19, Z+
     e84:	45 91       	lpm	r20, Z+
     e86:	55 91       	lpm	r21, Z+
     e88:	a6 f3       	brts	.-24     	; 0xe72 <__fp_powser+0x16>
     e8a:	ef 01       	movw	r28, r30
     e8c:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__addsf3x>
     e90:	fe 01       	movw	r30, r28
     e92:	97 01       	movw	r18, r14
     e94:	a8 01       	movw	r20, r16
     e96:	da 94       	dec	r13
     e98:	69 f7       	brne	.-38     	; 0xe74 <__fp_powser+0x18>
     e9a:	df 90       	pop	r13
     e9c:	ef 90       	pop	r14
     e9e:	ff 90       	pop	r15
     ea0:	0f 91       	pop	r16
     ea2:	1f 91       	pop	r17
     ea4:	cf 91       	pop	r28
     ea6:	df 91       	pop	r29
     ea8:	08 95       	ret

00000eaa <inverse>:
     eaa:	9b 01       	movw	r18, r22
     eac:	ac 01       	movw	r20, r24
     eae:	60 e0       	ldi	r22, 0x00	; 0
     eb0:	70 e0       	ldi	r23, 0x00	; 0
     eb2:	80 e8       	ldi	r24, 0x80	; 128
     eb4:	9f e3       	ldi	r25, 0x3F	; 63
     eb6:	0c 94 d8 04 	jmp	0x9b0	; 0x9b0 <__divsf3>
     eba:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <__fp_inf>
     ebe:	0c 94 1b 08 	jmp	0x1036	; 0x1036 <__fp_mpack>

00000ec2 <ldexp>:
     ec2:	0e 94 11 06 	call	0xc22	; 0xc22 <__fp_splitA>
     ec6:	d8 f3       	brcs	.-10     	; 0xebe <inverse+0x14>
     ec8:	99 23       	and	r25, r25
     eca:	c9 f3       	breq	.-14     	; 0xebe <inverse+0x14>
     ecc:	94 0f       	add	r25, r20
     ece:	51 1d       	adc	r21, r1
     ed0:	a3 f3       	brvs	.-24     	; 0xeba <inverse+0x10>
     ed2:	91 50       	subi	r25, 0x01	; 1
     ed4:	50 40       	sbci	r21, 0x00	; 0
     ed6:	94 f0       	brlt	.+36     	; 0xefc <ldexp+0x3a>
     ed8:	59 f0       	breq	.+22     	; 0xef0 <ldexp+0x2e>
     eda:	88 23       	and	r24, r24
     edc:	32 f0       	brmi	.+12     	; 0xeea <ldexp+0x28>
     ede:	66 0f       	add	r22, r22
     ee0:	77 1f       	adc	r23, r23
     ee2:	88 1f       	adc	r24, r24
     ee4:	91 50       	subi	r25, 0x01	; 1
     ee6:	50 40       	sbci	r21, 0x00	; 0
     ee8:	c1 f7       	brne	.-16     	; 0xeda <ldexp+0x18>
     eea:	9e 3f       	cpi	r25, 0xFE	; 254
     eec:	51 05       	cpc	r21, r1
     eee:	2c f7       	brge	.-54     	; 0xeba <inverse+0x10>
     ef0:	88 0f       	add	r24, r24
     ef2:	91 1d       	adc	r25, r1
     ef4:	96 95       	lsr	r25
     ef6:	87 95       	ror	r24
     ef8:	97 f9       	bld	r25, 7
     efa:	08 95       	ret
     efc:	5f 3f       	cpi	r21, 0xFF	; 255
     efe:	ac f0       	brlt	.+42     	; 0xf2a <ldexp+0x68>
     f00:	98 3e       	cpi	r25, 0xE8	; 232
     f02:	9c f0       	brlt	.+38     	; 0xf2a <ldexp+0x68>
     f04:	bb 27       	eor	r27, r27
     f06:	86 95       	lsr	r24
     f08:	77 95       	ror	r23
     f0a:	67 95       	ror	r22
     f0c:	b7 95       	ror	r27
     f0e:	08 f4       	brcc	.+2      	; 0xf12 <ldexp+0x50>
     f10:	b1 60       	ori	r27, 0x01	; 1
     f12:	93 95       	inc	r25
     f14:	c1 f7       	brne	.-16     	; 0xf06 <ldexp+0x44>
     f16:	bb 0f       	add	r27, r27
     f18:	58 f7       	brcc	.-42     	; 0xef0 <ldexp+0x2e>
     f1a:	11 f4       	brne	.+4      	; 0xf20 <ldexp+0x5e>
     f1c:	60 ff       	sbrs	r22, 0
     f1e:	e8 cf       	rjmp	.-48     	; 0xef0 <ldexp+0x2e>
     f20:	6f 5f       	subi	r22, 0xFF	; 255
     f22:	7f 4f       	sbci	r23, 0xFF	; 255
     f24:	8f 4f       	sbci	r24, 0xFF	; 255
     f26:	9f 4f       	sbci	r25, 0xFF	; 255
     f28:	e3 cf       	rjmp	.-58     	; 0xef0 <ldexp+0x2e>
     f2a:	0c 94 2c 06 	jmp	0xc58	; 0xc58 <__fp_szero>
     f2e:	16 f0       	brts	.+4      	; 0xf34 <ldexp+0x72>
     f30:	0c 94 1b 08 	jmp	0x1036	; 0x1036 <__fp_mpack>
     f34:	0c 94 e7 05 	jmp	0xbce	; 0xbce <__fp_nan>
     f38:	68 94       	set
     f3a:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <__fp_inf>

00000f3e <log>:
     f3e:	0e 94 11 06 	call	0xc22	; 0xc22 <__fp_splitA>
     f42:	a8 f3       	brcs	.-22     	; 0xf2e <ldexp+0x6c>
     f44:	99 23       	and	r25, r25
     f46:	c1 f3       	breq	.-16     	; 0xf38 <ldexp+0x76>
     f48:	ae f3       	brts	.-22     	; 0xf34 <ldexp+0x72>
     f4a:	df 93       	push	r29
     f4c:	cf 93       	push	r28
     f4e:	1f 93       	push	r17
     f50:	0f 93       	push	r16
     f52:	ff 92       	push	r15
     f54:	c9 2f       	mov	r28, r25
     f56:	dd 27       	eor	r29, r29
     f58:	88 23       	and	r24, r24
     f5a:	2a f0       	brmi	.+10     	; 0xf66 <log+0x28>
     f5c:	21 97       	sbiw	r28, 0x01	; 1
     f5e:	66 0f       	add	r22, r22
     f60:	77 1f       	adc	r23, r23
     f62:	88 1f       	adc	r24, r24
     f64:	da f7       	brpl	.-10     	; 0xf5c <log+0x1e>
     f66:	20 e0       	ldi	r18, 0x00	; 0
     f68:	30 e0       	ldi	r19, 0x00	; 0
     f6a:	40 e8       	ldi	r20, 0x80	; 128
     f6c:	5f eb       	ldi	r21, 0xBF	; 191
     f6e:	9f e3       	ldi	r25, 0x3F	; 63
     f70:	88 39       	cpi	r24, 0x98	; 152
     f72:	20 f0       	brcs	.+8      	; 0xf7c <log+0x3e>
     f74:	80 3e       	cpi	r24, 0xE0	; 224
     f76:	38 f0       	brcs	.+14     	; 0xf86 <log+0x48>
     f78:	21 96       	adiw	r28, 0x01	; 1
     f7a:	8f 77       	andi	r24, 0x7F	; 127
     f7c:	0e 94 67 04 	call	0x8ce	; 0x8ce <__addsf3>
     f80:	e8 e2       	ldi	r30, 0x28	; 40
     f82:	f1 e0       	ldi	r31, 0x01	; 1
     f84:	04 c0       	rjmp	.+8      	; 0xf8e <log+0x50>
     f86:	0e 94 67 04 	call	0x8ce	; 0x8ce <__addsf3>
     f8a:	e5 e5       	ldi	r30, 0x55	; 85
     f8c:	f1 e0       	ldi	r31, 0x01	; 1
     f8e:	0e 94 2e 07 	call	0xe5c	; 0xe5c <__fp_powser>
     f92:	8b 01       	movw	r16, r22
     f94:	be 01       	movw	r22, r28
     f96:	ec 01       	movw	r28, r24
     f98:	fb 2e       	mov	r15, r27
     f9a:	6f 57       	subi	r22, 0x7F	; 127
     f9c:	71 09       	sbc	r23, r1
     f9e:	75 95       	asr	r23
     fa0:	77 1f       	adc	r23, r23
     fa2:	88 0b       	sbc	r24, r24
     fa4:	99 0b       	sbc	r25, r25
     fa6:	0e 94 82 05 	call	0xb04	; 0xb04 <__floatsisf>
     faa:	28 e1       	ldi	r18, 0x18	; 24
     fac:	32 e7       	ldi	r19, 0x72	; 114
     fae:	41 e3       	ldi	r20, 0x31	; 49
     fb0:	5f e3       	ldi	r21, 0x3F	; 63
     fb2:	0e 94 4a 06 	call	0xc94	; 0xc94 <__mulsf3x>
     fb6:	af 2d       	mov	r26, r15
     fb8:	98 01       	movw	r18, r16
     fba:	ae 01       	movw	r20, r28
     fbc:	ff 90       	pop	r15
     fbe:	0f 91       	pop	r16
     fc0:	1f 91       	pop	r17
     fc2:	cf 91       	pop	r28
     fc4:	df 91       	pop	r29
     fc6:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__addsf3x>
     fca:	0c 94 f8 05 	jmp	0xbf0	; 0xbf0 <__fp_round>

00000fce <modf>:
     fce:	fa 01       	movw	r30, r20
     fd0:	dc 01       	movw	r26, r24
     fd2:	aa 0f       	add	r26, r26
     fd4:	bb 1f       	adc	r27, r27
     fd6:	9b 01       	movw	r18, r22
     fd8:	ac 01       	movw	r20, r24
     fda:	bf 57       	subi	r27, 0x7F	; 127
     fdc:	28 f4       	brcc	.+10     	; 0xfe8 <modf+0x1a>
     fde:	22 27       	eor	r18, r18
     fe0:	33 27       	eor	r19, r19
     fe2:	44 27       	eor	r20, r20
     fe4:	50 78       	andi	r21, 0x80	; 128
     fe6:	20 c0       	rjmp	.+64     	; 0x1028 <modf+0x5a>
     fe8:	b7 51       	subi	r27, 0x17	; 23
     fea:	90 f4       	brcc	.+36     	; 0x1010 <modf+0x42>
     fec:	ab 2f       	mov	r26, r27
     fee:	00 24       	eor	r0, r0
     ff0:	46 95       	lsr	r20
     ff2:	37 95       	ror	r19
     ff4:	27 95       	ror	r18
     ff6:	01 1c       	adc	r0, r1
     ff8:	a3 95       	inc	r26
     ffa:	d2 f3       	brmi	.-12     	; 0xff0 <modf+0x22>
     ffc:	00 20       	and	r0, r0
     ffe:	71 f0       	breq	.+28     	; 0x101c <modf+0x4e>
    1000:	22 0f       	add	r18, r18
    1002:	33 1f       	adc	r19, r19
    1004:	44 1f       	adc	r20, r20
    1006:	b3 95       	inc	r27
    1008:	da f3       	brmi	.-10     	; 0x1000 <modf+0x32>
    100a:	0e d0       	rcall	.+28     	; 0x1028 <modf+0x5a>
    100c:	0c 94 66 04 	jmp	0x8cc	; 0x8cc <__subsf3>
    1010:	61 30       	cpi	r22, 0x01	; 1
    1012:	71 05       	cpc	r23, r1
    1014:	a0 e8       	ldi	r26, 0x80	; 128
    1016:	8a 07       	cpc	r24, r26
    1018:	b9 46       	sbci	r27, 0x69	; 105
    101a:	30 f4       	brcc	.+12     	; 0x1028 <modf+0x5a>
    101c:	9b 01       	movw	r18, r22
    101e:	ac 01       	movw	r20, r24
    1020:	66 27       	eor	r22, r22
    1022:	77 27       	eor	r23, r23
    1024:	88 27       	eor	r24, r24
    1026:	90 78       	andi	r25, 0x80	; 128
    1028:	30 96       	adiw	r30, 0x00	; 0
    102a:	21 f0       	breq	.+8      	; 0x1034 <modf+0x66>
    102c:	20 83       	st	Z, r18
    102e:	31 83       	std	Z+1, r19	; 0x01
    1030:	42 83       	std	Z+2, r20	; 0x02
    1032:	53 83       	std	Z+3, r21	; 0x03
    1034:	08 95       	ret

00001036 <__fp_mpack>:
    1036:	9f 3f       	cpi	r25, 0xFF	; 255
    1038:	31 f0       	breq	.+12     	; 0x1046 <__fp_mpack_finite+0xc>

0000103a <__fp_mpack_finite>:
    103a:	91 50       	subi	r25, 0x01	; 1
    103c:	20 f4       	brcc	.+8      	; 0x1046 <__fp_mpack_finite+0xc>
    103e:	87 95       	ror	r24
    1040:	77 95       	ror	r23
    1042:	67 95       	ror	r22
    1044:	b7 95       	ror	r27
    1046:	88 0f       	add	r24, r24
    1048:	91 1d       	adc	r25, r1
    104a:	96 95       	lsr	r25
    104c:	87 95       	ror	r24
    104e:	97 f9       	bld	r25, 7
    1050:	08 95       	ret

00001052 <__divmodsi4>:
    1052:	05 2e       	mov	r0, r21
    1054:	97 fb       	bst	r25, 7
    1056:	1e f4       	brtc	.+6      	; 0x105e <__divmodsi4+0xc>
    1058:	00 94       	com	r0
    105a:	0e 94 40 08 	call	0x1080	; 0x1080 <__negsi2>
    105e:	57 fd       	sbrc	r21, 7
    1060:	07 d0       	rcall	.+14     	; 0x1070 <__divmodsi4_neg2>
    1062:	0e 94 91 08 	call	0x1122	; 0x1122 <__udivmodsi4>
    1066:	07 fc       	sbrc	r0, 7
    1068:	03 d0       	rcall	.+6      	; 0x1070 <__divmodsi4_neg2>
    106a:	4e f4       	brtc	.+18     	; 0x107e <__divmodsi4_exit>
    106c:	0c 94 40 08 	jmp	0x1080	; 0x1080 <__negsi2>

00001070 <__divmodsi4_neg2>:
    1070:	50 95       	com	r21
    1072:	40 95       	com	r20
    1074:	30 95       	com	r19
    1076:	21 95       	neg	r18
    1078:	3f 4f       	sbci	r19, 0xFF	; 255
    107a:	4f 4f       	sbci	r20, 0xFF	; 255
    107c:	5f 4f       	sbci	r21, 0xFF	; 255

0000107e <__divmodsi4_exit>:
    107e:	08 95       	ret

00001080 <__negsi2>:
    1080:	90 95       	com	r25
    1082:	80 95       	com	r24
    1084:	70 95       	com	r23
    1086:	61 95       	neg	r22
    1088:	7f 4f       	sbci	r23, 0xFF	; 255
    108a:	8f 4f       	sbci	r24, 0xFF	; 255
    108c:	9f 4f       	sbci	r25, 0xFF	; 255
    108e:	08 95       	ret

00001090 <__umulsidi3>:
    1090:	e8 94       	clt

00001092 <__umulsidi3_helper>:
    1092:	df 93       	push	r29
    1094:	cf 93       	push	r28
    1096:	fc 01       	movw	r30, r24
    1098:	db 01       	movw	r26, r22
    109a:	0e 94 b3 08 	call	0x1166	; 0x1166 <__umulhisi3>
    109e:	7f 93       	push	r23
    10a0:	6f 93       	push	r22
    10a2:	e9 01       	movw	r28, r18
    10a4:	9a 01       	movw	r18, r20
    10a6:	ac 01       	movw	r20, r24
    10a8:	bf 93       	push	r27
    10aa:	af 93       	push	r26
    10ac:	3f 93       	push	r19
    10ae:	2f 93       	push	r18
    10b0:	df 01       	movw	r26, r30
    10b2:	0e 94 b3 08 	call	0x1166	; 0x1166 <__umulhisi3>
    10b6:	26 f4       	brtc	.+8      	; 0x10c0 <__umulsidi3_helper+0x2e>
    10b8:	6c 1b       	sub	r22, r28
    10ba:	7d 0b       	sbc	r23, r29
    10bc:	82 0b       	sbc	r24, r18
    10be:	93 0b       	sbc	r25, r19
    10c0:	9e 01       	movw	r18, r28
    10c2:	eb 01       	movw	r28, r22
    10c4:	fc 01       	movw	r30, r24
    10c6:	0e 94 c2 08 	call	0x1184	; 0x1184 <__muldi3_6>
    10ca:	af 91       	pop	r26
    10cc:	bf 91       	pop	r27
    10ce:	2f 91       	pop	r18
    10d0:	3f 91       	pop	r19
    10d2:	0e 94 c2 08 	call	0x1184	; 0x1184 <__muldi3_6>
    10d6:	be 01       	movw	r22, r28
    10d8:	cf 01       	movw	r24, r30
    10da:	f9 01       	movw	r30, r18
    10dc:	2f 91       	pop	r18
    10de:	3f 91       	pop	r19
    10e0:	cf 91       	pop	r28
    10e2:	df 91       	pop	r29
    10e4:	08 95       	ret

000010e6 <__ashrdi3>:
    10e6:	97 fb       	bst	r25, 7
    10e8:	10 f8       	bld	r1, 0

000010ea <__lshrdi3>:
    10ea:	16 94       	lsr	r1
    10ec:	00 08       	sbc	r0, r0
    10ee:	0f 93       	push	r16
    10f0:	08 30       	cpi	r16, 0x08	; 8
    10f2:	98 f0       	brcs	.+38     	; 0x111a <__lshrdi3+0x30>
    10f4:	08 50       	subi	r16, 0x08	; 8
    10f6:	23 2f       	mov	r18, r19
    10f8:	34 2f       	mov	r19, r20
    10fa:	45 2f       	mov	r20, r21
    10fc:	56 2f       	mov	r21, r22
    10fe:	67 2f       	mov	r22, r23
    1100:	78 2f       	mov	r23, r24
    1102:	89 2f       	mov	r24, r25
    1104:	90 2d       	mov	r25, r0
    1106:	f4 cf       	rjmp	.-24     	; 0x10f0 <__lshrdi3+0x6>
    1108:	05 94       	asr	r0
    110a:	97 95       	ror	r25
    110c:	87 95       	ror	r24
    110e:	77 95       	ror	r23
    1110:	67 95       	ror	r22
    1112:	57 95       	ror	r21
    1114:	47 95       	ror	r20
    1116:	37 95       	ror	r19
    1118:	27 95       	ror	r18
    111a:	0a 95       	dec	r16
    111c:	aa f7       	brpl	.-22     	; 0x1108 <__lshrdi3+0x1e>
    111e:	0f 91       	pop	r16
    1120:	08 95       	ret

00001122 <__udivmodsi4>:
    1122:	a1 e2       	ldi	r26, 0x21	; 33
    1124:	1a 2e       	mov	r1, r26
    1126:	aa 1b       	sub	r26, r26
    1128:	bb 1b       	sub	r27, r27
    112a:	fd 01       	movw	r30, r26
    112c:	0d c0       	rjmp	.+26     	; 0x1148 <__udivmodsi4_ep>

0000112e <__udivmodsi4_loop>:
    112e:	aa 1f       	adc	r26, r26
    1130:	bb 1f       	adc	r27, r27
    1132:	ee 1f       	adc	r30, r30
    1134:	ff 1f       	adc	r31, r31
    1136:	a2 17       	cp	r26, r18
    1138:	b3 07       	cpc	r27, r19
    113a:	e4 07       	cpc	r30, r20
    113c:	f5 07       	cpc	r31, r21
    113e:	20 f0       	brcs	.+8      	; 0x1148 <__udivmodsi4_ep>
    1140:	a2 1b       	sub	r26, r18
    1142:	b3 0b       	sbc	r27, r19
    1144:	e4 0b       	sbc	r30, r20
    1146:	f5 0b       	sbc	r31, r21

00001148 <__udivmodsi4_ep>:
    1148:	66 1f       	adc	r22, r22
    114a:	77 1f       	adc	r23, r23
    114c:	88 1f       	adc	r24, r24
    114e:	99 1f       	adc	r25, r25
    1150:	1a 94       	dec	r1
    1152:	69 f7       	brne	.-38     	; 0x112e <__udivmodsi4_loop>
    1154:	60 95       	com	r22
    1156:	70 95       	com	r23
    1158:	80 95       	com	r24
    115a:	90 95       	com	r25
    115c:	9b 01       	movw	r18, r22
    115e:	ac 01       	movw	r20, r24
    1160:	bd 01       	movw	r22, r26
    1162:	cf 01       	movw	r24, r30
    1164:	08 95       	ret

00001166 <__umulhisi3>:
    1166:	a2 9f       	mul	r26, r18
    1168:	b0 01       	movw	r22, r0
    116a:	b3 9f       	mul	r27, r19
    116c:	c0 01       	movw	r24, r0
    116e:	a3 9f       	mul	r26, r19
    1170:	70 0d       	add	r23, r0
    1172:	81 1d       	adc	r24, r1
    1174:	11 24       	eor	r1, r1
    1176:	91 1d       	adc	r25, r1
    1178:	b2 9f       	mul	r27, r18
    117a:	70 0d       	add	r23, r0
    117c:	81 1d       	adc	r24, r1
    117e:	11 24       	eor	r1, r1
    1180:	91 1d       	adc	r25, r1
    1182:	08 95       	ret

00001184 <__muldi3_6>:
    1184:	0e 94 b3 08 	call	0x1166	; 0x1166 <__umulhisi3>
    1188:	46 0f       	add	r20, r22
    118a:	57 1f       	adc	r21, r23
    118c:	c8 1f       	adc	r28, r24
    118e:	d9 1f       	adc	r29, r25
    1190:	08 f4       	brcc	.+2      	; 0x1194 <__muldi3_6+0x10>
    1192:	31 96       	adiw	r30, 0x01	; 1
    1194:	08 95       	ret

00001196 <_exit>:
    1196:	f8 94       	cli

00001198 <__stop_program>:
    1198:	ff cf       	rjmp	.-2      	; 0x1198 <__stop_program>
